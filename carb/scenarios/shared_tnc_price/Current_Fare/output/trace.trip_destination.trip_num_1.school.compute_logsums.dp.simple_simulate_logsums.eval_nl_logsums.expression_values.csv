Expression,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24
sov_available == False,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
is_joint == True,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_atwork_subtour & ~work_tour_is_SOV,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_ivt*odt_skims['SOV_TIME'],-1.470445990562439,-1.3644850254058838,-0.6357659697532654,-0.6474189758300781,-0.657446026802063,-0.5531110167503357,-0.49972403049468994,-0.47587600350379944,-0.17642101645469666,-0.5723520517349243,-0.5880700349807739,-0.8528370261192322,-0.7642200589179993,-1.2902309894561768,-1.321395993232727,-1.112726092338562,-0.9796650409698486,-1.1062220335006714,-1.0726181268692017,-0.7818350195884705,-1.5357569456100464,-1.7091970443725586,-1.8823660612106323,-1.9991669654846191,-1.788329005241394
@c_walktimeshort * df.total_terminal_time,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * costPerMile * odt_skims['SOV_DIST'],-0.3534858613038756,-0.3462627864032156,-0.12885647596030972,-0.13795223140669083,-0.1693414865946505,-0.1523092476554882,-0.13795223140669083,-0.1111108454376232,-0.0279114733443539,-0.09978573916665438,-0.10317435344054351,-0.14633458676524927,-0.1615833552498996,-0.31112819563670924,-0.34278497054241586,-0.3295872177429199,-0.3077395728585216,-0.3307464896965198,-0.3329758405211075,-0.21990316397664356,-0.4652209137467094,-0.5413755460787519,-0.6191353137258733,-0.6370593134051871,-0.471017239497515
c_cost * total_parking_cost,-0.13356069782213442,-0.013260697999110328,-0.010445142983734907,-0.0009489662870313421,-0.0005382306459843716,-0.0018613453423862113,-0.006345280784184227,-0.00782706426435428,-0.00865316015522662,-0.003477696632207198,-0.0009071591002647163,-0.023765364786788697,-0.007359183168658771,-0.01864628478116368,-0.01472616650387417,-0.011243042849427232,-0.0317969304200305,-0.012886220091592192,-0.014508669950968214,-0.0009015419366210932,-0.0,-0.001567471854297392,-0.005655779850766392,-0.0088267981723973,-0.006747187058183178
@df.c_cost * odt_skims['SOV_BTOLL'],-0.021803514838039963,-0.021325709963774215,-0.007362099136512676,-0.008590741038858622,-0.009785253224522993,-0.009336701463187474,-0.00851760686162351,-0.0066112625734023244,-0.001647940085781389,-0.005519136282993757,-0.006660017916609322,-0.009195310642408288,-0.010092414165079326,-0.01996055105458135,-0.0213062072685276,-0.020682134039791626,-0.019580257796669293,-0.021067303901455035,-0.021096557944324957,-0.013724707460188973,-0.03161314364180214,-0.03387540793354543,-0.03883385381741502,-0.039823592352688404,-0.029228995874224752
@c_age1619_da * ((df.age >= 16) & (df.age <= 19)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
sovtoll_available == False,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
auto_ownership == 0 # (2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (2),1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
is_joint == True # (2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_atwork_subtour & ~work_tour_is_SOV # (2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_ivt*odt_skims['SOVTOLL_TIME'],-1.470445990562439,-1.3644850254058838,-0.6357659697532654,-0.6474189758300781,-0.657446026802063,-0.5531110167503357,-0.49972403049468994,-0.47587600350379944,-0.17642101645469666,-0.5723520517349243,-0.5880700349807739,-0.8528370261192322,-0.7642200589179993,-1.2902309894561768,-1.321395993232727,-1.112726092338562,-0.9796650409698486,-1.1062220335006714,-1.0726181268692017,-0.7818350195884705,-1.5357569456100464,-1.7091970443725586,-1.8823660612106323,-1.9991669654846191,-1.788329005241394
@c_walktimeshort * df.total_terminal_time # (2),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * costPerMile * odt_skims['SOVTOLL_DIST'],-0.3534858613038756,-0.3462627864032156,-0.12885647596030972,-0.13795223140669083,-0.1693414865946505,-0.1523092476554882,-0.13795223140669083,-0.1111108454376232,-0.0279114733443539,-0.09978573916665438,-0.10317435344054351,-0.14633458676524927,-0.1615833552498996,-0.31112819563670924,-0.34278497054241586,-0.3295872177429199,-0.3077395728585216,-0.3307464896965198,-0.3329758405211075,-0.21990316397664356,-0.4652209137467094,-0.5413755460787519,-0.6191353137258733,-0.6370593134051871,-0.471017239497515
c_cost * total_parking_cost # (2),-0.13356069782213442,-0.013260697999110328,-0.010445142983734907,-0.0009489662870313421,-0.0005382306459843716,-0.0018613453423862113,-0.006345280784184227,-0.00782706426435428,-0.00865316015522662,-0.003477696632207198,-0.0009071591002647163,-0.023765364786788697,-0.007359183168658771,-0.01864628478116368,-0.01472616650387417,-0.011243042849427232,-0.0317969304200305,-0.012886220091592192,-0.014508669950968214,-0.0009015419366210932,-0.0,-0.001567471854297392,-0.005655779850766392,-0.0088267981723973,-0.006747187058183178
@df.c_cost * odt_skims['SOVTOLL_BTOLL'],-0.021803514838039963,-0.021325709963774215,-0.007362099136512676,-0.008590741038858622,-0.009785253224522993,-0.009336701463187474,-0.00851760686162351,-0.0066112625734023244,-0.001647940085781389,-0.005519136282993757,-0.006660017916609322,-0.009195310642408288,-0.010092414165079326,-0.01996055105458135,-0.0213062072685276,-0.020682134039791626,-0.019580257796669293,-0.021067303901455035,-0.021096557944324957,-0.013724707460188973,-0.03161314364180214,-0.03387540793354543,-0.03883385381741502,-0.039823592352688404,-0.029228995874224752
@df.c_cost * odt_skims['SOVTOLL_VTOLL'],-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_age1619_da * ((df.age >= 16) & (df.age <= 19)) # (2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov2_available == False,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_joint & (number_of_participants > 2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_ivt * odt_skims['HOV2_TIME'],-1.470445990562439,-1.3644850254058838,-0.6357659697532654,-0.6474189758300781,-0.657446026802063,-0.5531110167503357,-0.49972403049468994,-0.47587600350379944,-0.17642101645469666,-0.5723520517349243,-0.5880700349807739,-0.8528370261192322,-0.7642200589179993,-1.2902309894561768,-1.321395993232727,-1.112726092338562,-0.9796650409698486,-1.1062220335006714,-1.0726181268692017,-0.7818350195884705,-1.5357569456100464,-1.7091970443725586,-1.8823660612106323,-1.9991669654846191,-1.788329005241394
@c_walktimeshort * df.total_terminal_time # (3),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * costPerMile * odt_skims['HOV2_DIST'],-0.3534858613038756,-0.3462627864032156,-0.12885647596030972,-0.13795223140669083,-0.1693414865946505,-0.1523092476554882,-0.13795223140669083,-0.1111108454376232,-0.0279114733443539,-0.09978573916665438,-0.10317435344054351,-0.14633458676524927,-0.1615833552498996,-0.31112819563670924,-0.34278497054241586,-0.3295872177429199,-0.3077395728585216,-0.3307464896965198,-0.3329758405211075,-0.21990316397664356,-0.4652209137467094,-0.5413755460787519,-0.6191353137258733,-0.6370593134051871,-0.471017239497515
@df.c_cost * df.total_parking_cost / costShareSr2,-0.07632039875550538,-0.00757754171377733,-0.005968653133562804,-0.0005422664497321955,-0.0003075603691339266,-0.001063625909934978,-0.0036258747338195584,-0.004472608151059589,-0.0049446629458437825,-0.001987255218404113,-0.000518376628722695,-0.013580208449593541,-0.0042052475249478695,-0.010655019874950674,-0.008414952287928098,-0.0064245959139584185,-0.018169674525731712,-0.007363554338052682,-0.008290668543410408,-0.000515166820926339,-0.0,-0.0008956982024556525,-0.0032318742004379384,-0.0050438846699413144,-0.0038555354618189587
@df.c_cost * odt_skims['HOV2_BTOLL'] / costShareSr2,-0.012459151336022836,-0.012186119979299552,-0.004206913792292957,-0.004908994879347784,-0.005591573271155996,-0.005335257978964271,-0.004867203920927719,-0.0037778643276584712,-0.0009416800490179366,-0.003153792161710718,-0.0038057245237767554,-0.005254463224233307,-0.005767093808616758,-0.011406029174046485,-0.012174975582015772,-0.011818362308452358,-0.011188718740953882,-0.01203845937226002,-0.01205517596818569,-0.007842689977250841,-0.018064653509601226,-0.019357375962025962,-0.02219077360995144,-0.022756338487250515,-0.01670228335669986
@c_hhsize1_sr * (df.hhsize == 1),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_hhsize2_sr * (df.hhsize == 2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_age16p_sr * (df.age >= 16),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov2toll_available == False,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
is_joint & (number_of_participants > 2) # (2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_ivt * odt_skims['HOV2TOLL_TIME'],-1.470445990562439,-1.3644850254058838,-0.6357659697532654,-0.6474189758300781,-0.657446026802063,-0.5531110167503357,-0.49972403049468994,-0.47587600350379944,-0.17642101645469666,-0.5723520517349243,-0.5880700349807739,-0.8528370261192322,-0.7642200589179993,-1.2902309894561768,-1.321395993232727,-1.112726092338562,-0.9796650409698486,-1.1062220335006714,-1.0726181268692017,-0.7818350195884705,-1.5357569456100464,-1.7091970443725586,-1.8823660612106323,-1.9991669654846191,-1.788329005241394
@c_walktimeshort * df.total_terminal_time # (4),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * costPerMile * odt_skims['HOV2TOLL_DIST'],-0.3534858613038756,-0.3462627864032156,-0.12885647596030972,-0.13795223140669083,-0.1693414865946505,-0.1523092476554882,-0.13795223140669083,-0.1111108454376232,-0.0279114733443539,-0.09978573916665438,-0.10317435344054351,-0.14633458676524927,-0.1615833552498996,-0.31112819563670924,-0.34278497054241586,-0.3295872177429199,-0.3077395728585216,-0.3307464896965198,-0.3329758405211075,-0.21990316397664356,-0.4652209137467094,-0.5413755460787519,-0.6191353137258733,-0.6370593134051871,-0.471017239497515
@df.c_cost * df.total_parking_cost / costShareSr2 # (2),-0.07632039875550538,-0.00757754171377733,-0.005968653133562804,-0.0005422664497321955,-0.0003075603691339266,-0.001063625909934978,-0.0036258747338195584,-0.004472608151059589,-0.0049446629458437825,-0.001987255218404113,-0.000518376628722695,-0.013580208449593541,-0.0042052475249478695,-0.010655019874950674,-0.008414952287928098,-0.0064245959139584185,-0.018169674525731712,-0.007363554338052682,-0.008290668543410408,-0.000515166820926339,-0.0,-0.0008956982024556525,-0.0032318742004379384,-0.0050438846699413144,-0.0038555354618189587
@df.c_cost * odt_skims['HOV2TOLL_BTOLL'] / costShareSr2,-0.012459151336022836,-0.012186119979299552,-0.004206913792292957,-0.004908994879347784,-0.005591573271155996,-0.005335257978964271,-0.004867203920927719,-0.0037778643276584712,-0.0009416800490179366,-0.003153792161710718,-0.0038057245237767554,-0.005254463224233307,-0.005767093808616758,-0.011406029174046485,-0.012174975582015772,-0.011818362308452358,-0.011188718740953882,-0.01203845937226002,-0.01205517596818569,-0.007842689977250841,-0.018064653509601226,-0.019357375962025962,-0.02219077360995144,-0.022756338487250515,-0.01670228335669986
@df.c_cost * odt_skims['HOV2TOLL_VTOLL'] / costShareSr2,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_hhsize1_sr * (df.hhsize == 1) # (2),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_hhsize2_sr * (df.hhsize == 2) # (2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_age16p_sr * (df.age >= 16) # (2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov3_available == False,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_ivt * odt_skims['HOV3_TIME'],-1.470445990562439,-1.3644850254058838,-0.6357659697532654,-0.6474189758300781,-0.657446026802063,-0.5531110167503357,-0.49972403049468994,-0.47587600350379944,-0.17642101645469666,-0.5723520517349243,-0.5880700349807739,-0.8528370261192322,-0.7642200589179993,-1.2902309894561768,-1.321395993232727,-1.112726092338562,-0.9796650409698486,-1.1062220335006714,-1.0726181268692017,-0.7818350195884705,-1.5357569456100464,-1.7091970443725586,-1.8823660612106323,-1.9991669654846191,-1.788329005241394
@c_walktimeshort * df.total_terminal_time # (5),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * costPerMile * odt_skims['HOV3_DIST'],-0.3534858613038756,-0.3462627864032156,-0.12885647596030972,-0.13795223140669083,-0.1693414865946505,-0.1523092476554882,-0.13795223140669083,-0.1111108454376232,-0.0279114733443539,-0.09978573916665438,-0.10317435344054351,-0.14633458676524927,-0.1615833552498996,-0.31112819563670924,-0.34278497054241586,-0.3295872177429199,-0.3077395728585216,-0.3307464896965198,-0.3329758405211075,-0.21990316397664356,-0.4652209137467094,-0.5413755460787519,-0.6191353137258733,-0.6370593134051871,-0.471017239497515
@df.c_cost *  df.total_parking_cost / costShareSr3,-0.053424279128853766,-0.005304279199644131,-0.004178057193493963,-0.00037958651481253685,-0.00021529225839374863,-0.0007445381369544845,-0.0025381123136736907,-0.003130825705741712,-0.003461264062090648,-0.001391078652882879,-0.00036286364010588653,-0.00950614591471548,-0.0029436732674635083,-0.007458513912465473,-0.005890466601549668,-0.004497217139770892,-0.0127187721680122,-0.005154488036636877,-0.005803467980387286,-0.0003606167746484373,-0.0,-0.0006269887417189567,-0.002262311940306557,-0.00353071926895892,-0.002698874823273271
@df.c_cost * odt_skims['HOV3_BTOLL'] / costShareSr3,-0.008721405935215986,-0.008530283985509686,-0.00294483965460507,-0.0034362964155434488,-0.003914101289809197,-0.0037346805852749897,-0.0034070427446494037,-0.0026445050293609296,-0.0006591760343125557,-0.0022076545131975026,-0.0026640071666437287,-0.0036781242569633153,-0.004036965666031731,-0.00798422042183254,-0.00852248290741104,-0.008272853615916651,-0.007832103118667718,-0.008426921560582014,-0.008438623177729983,-0.005489882984075589,-0.012645257456720857,-0.013550163173418173,-0.015533541526966007,-0.01592943694107536,-0.011691598349689901
@c_hhsize1_sr * (df.hhsize == 1) # (3),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_hhsize2_sr * (df.hhsize == 2) # (3),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_age16p_sr * (df.age >= 16) # (3),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov3toll_available == False,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_ivt * odt_skims['HOV3TOLL_TIME'],-1.470445990562439,-1.3644850254058838,-0.6357659697532654,-0.6474189758300781,-0.657446026802063,-0.5531110167503357,-0.49972403049468994,-0.47587600350379944,-0.17642101645469666,-0.5723520517349243,-0.5880700349807739,-0.8528370261192322,-0.7642200589179993,-1.2902309894561768,-1.321395993232727,-1.112726092338562,-0.9796650409698486,-1.1062220335006714,-1.0726181268692017,-0.7818350195884705,-1.5357569456100464,-1.7091970443725586,-1.8823660612106323,-1.9991669654846191,-1.788329005241394
@c_walktimeshort * df.total_terminal_time # (6),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * costPerMile * odt_skims['HOV3TOLL_DIST'],-0.3534858613038756,-0.3462627864032156,-0.12885647596030972,-0.13795223140669083,-0.1693414865946505,-0.1523092476554882,-0.13795223140669083,-0.1111108454376232,-0.0279114733443539,-0.09978573916665438,-0.10317435344054351,-0.14633458676524927,-0.1615833552498996,-0.31112819563670924,-0.34278497054241586,-0.3295872177429199,-0.3077395728585216,-0.3307464896965198,-0.3329758405211075,-0.21990316397664356,-0.4652209137467094,-0.5413755460787519,-0.6191353137258733,-0.6370593134051871,-0.471017239497515
@df.c_cost * df.total_parking_cost / costShareSr3,-0.053424279128853766,-0.005304279199644131,-0.004178057193493963,-0.00037958651481253685,-0.00021529225839374863,-0.0007445381369544845,-0.0025381123136736907,-0.003130825705741712,-0.003461264062090648,-0.001391078652882879,-0.00036286364010588653,-0.00950614591471548,-0.0029436732674635083,-0.007458513912465473,-0.005890466601549668,-0.004497217139770892,-0.0127187721680122,-0.005154488036636877,-0.005803467980387286,-0.0003606167746484373,-0.0,-0.0006269887417189567,-0.002262311940306557,-0.00353071926895892,-0.002698874823273271
@df.c_cost * odt_skims['HOV3TOLL_BTOLL'] / costShareSr3,-0.008721405935215986,-0.008530283985509686,-0.00294483965460507,-0.0034362964155434488,-0.003914101289809197,-0.0037346805852749897,-0.0034070427446494037,-0.0026445050293609296,-0.0006591760343125557,-0.0022076545131975026,-0.0026640071666437287,-0.0036781242569633153,-0.004036965666031731,-0.00798422042183254,-0.00852248290741104,-0.008272853615916651,-0.007832103118667718,-0.008426921560582014,-0.008438623177729983,-0.005489882984075589,-0.012645257456720857,-0.013550163173418173,-0.015533541526966007,-0.01592943694107536,-0.011691598349689901
@df.c_cost * odt_skims['HOV3TOLL_VTOLL'] / costShareSr3,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_hhsize1_sr * (df.hhsize == 1) # (4),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_hhsize2_sr * (df.hhsize == 2) # (4),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_age16p_sr * (df.age >= 16) # (4),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_walktimeshort * od_skims['DISTWALK'].clip(upper=walkThresh) * 60/walkSpeed
@c_walktimelong * (od_skims['DISTWALK'] - walkThresh).clip(lower=0) * 60/walkSpeed,-303.5741882324219,-294.6311950683594,-105.36479949951172,-109.1587905883789,-106.61139678955078,-103.2509994506836,-104.71439361572266,-82.8176040649414,-11.544600486755371,-55.88020324707031,-57.289398193359375,-83.5221939086914,-88.07500457763672,-172.0850067138672,-193.92759704589844,-206.7187957763672,-197.4506072998047,-212.84339904785156,-213.11439514160156,-153.06080627441406,-710.02001953125,-814.8427734375,-848.12158203125,-864.7067260742188,-404.38623046875
@c_density_index * df.density_index,0.07308358648941254,0.011172115730584175,0.012926378055647446,0.002769941570101771,0.001566605662352291,0.004141990919879796,0.008588851654663112,0.01220050087441427,0.0008023452670598716,0.009527684864776294,0.010402727880731625,0.025067236489239322,0.014353150104394863,0.004286650885881719,0.00690093408466648,0.012095956899648088,0.02317116824341336,0.006497116985101082,0.014141257707810159,0.0015135977632496564,0.0018380419453556758,0.0018286077715914365,0.008308867027305005,0.009538028581393009,0.005484789048978042
@c_topology_walk * df.trip_topology,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065,-0.4065
is_atwork_subtour & ~work_tour_is_bike,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_biketimeshort * od_skims['DISTBIKE'].clip(upper=bikeThresh)*60/bikeSpeed,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-1.6964601278305054,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083,-3.252000093460083
@c_biketimelong * (od_skims['DISTBIKE']-bikeThresh).clip(lower=0)*60/bikeSpeed,-138.23709106445312,-133.76560974121094,-39.13240432739258,-41.029396057128906,-39.755699157714844,-38.075496673583984,-38.80720138549805,-27.858800888061523,-0.0,-14.390101432800293,-15.094698905944824,-28.21109962463379,-30.487497329711914,-72.49250030517578,-83.4137954711914,-89.80939483642578,-85.17530059814453,-92.8717041015625,-93.0072021484375,-62.98039627075195,-341.4599914550781,-393.8713684082031,-410.5107727050781,-418.8033752441406,-188.64308166503906
@c_density_index*df.density_index,0.07308358648941254,0.011172115730584175,0.012926378055647446,0.002769941570101771,0.001566605662352291,0.004141990919879796,0.008588851654663112,0.01220050087441427,0.0008023452670598716,0.009527684864776294,0.010402727880731625,0.025067236489239322,0.014353150104394863,0.004286650885881719,0.00690093408466648,0.012095956899648088,0.02317116824341336,0.006497116985101082,0.014141257707810159,0.0015135977632496564,0.0018380419453556758,0.0018286077715914365,0.008308867027305005,0.009538028581393009,0.005484789048978042
@c_topology_bike * df.trip_topology,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542,-0.542
walk_local_available == False,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_ivt * odt_skims['WLK_LOC_WLK_TOTIVT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.3042435944080353,-0.9257089495658875,-1.2637650966644287,-2.054586410522461,-1.6838042736053467,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_short_i_wait * (odt_skims['WLK_LOC_WLK_IWAIT']/100).clip(upper=waitThresh),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_long_i_wait * (odt_skims['WLK_LOC_WLK_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.1422993689775467,-0.1388983577489853,-0.00679937144741416,-0.1456977277994156,-0.00679937144741416,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_xwait * odt_skims['WLK_LOC_WLK_XWAIT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.8130000233650208,-0.0,-0.8130000233650208,-1.3550000190734863,-0.8130000233650208,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_xfers_wlk * (odt_skims['WLK_LOC_WLK_BOARDS']-1).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.1354999989271164,-0.0,-0.1354999989271164,-0.2709999978542328,-0.1354999989271164,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_wacc * df.origin_walk_time,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_wegr * df.destination_walk_time,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_waux * odt_skims['WLK_LOC_WLK_WAUX']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * odt_skims['WLK_LOC_WLK_FAR'],-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.06582008995502249,-0.06582008995502249,-0.06582008995502249,-0.06582008995502249,-0.06582008995502249,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_density_index * df.density_index # (2),0.07308358648941254,0.011172115730584175,0.012926378055647446,0.002769941570101771,0.001566605662352291,0.004141990919879796,0.008588851654663112,0.01220050087441427,0.0008023452670598716,0.009527684864776294,0.010402727880731625,0.025067236489239322,0.014353150104394863,0.004286650885881719,0.00690093408466648,0.012095956899648088,0.02317116824341336,0.006497116985101082,0.014141257707810159,0.0015135977632496564,0.0018380419453556758,0.0018286077715914365,0.008308867027305005,0.009538028581393009,0.005484789048978042
@c_topology_trn * df.trip_topology,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962
@c_age010_trn * (df.age <= 10),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
walk_lrf_available == False,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_ivt * odt_skims['WLK_LRF_WLK_TOTIVT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.3042435944080353,-0.9257089495658875,-1.2637650966644287,-2.088968276977539,-1.6838042736053467,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@(c_ivt_lrt-c_ivt) * odt_skims['WLK_LRF_WLK_KEYIVT']/100,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(c_ivt_ferry-c_ivt_lrt) * odt_skims['WLK_LRF_WLK_FERRYIVT']/100,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_short_i_wait * (odt_skims['WLK_LRF_WLK_IWAIT']/100).clip(upper=waitThresh),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_long_i_wait * (odt_skims['WLK_LRF_WLK_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.1422993689775467,-0.1388983577489853,-0.00679937144741416,-0.01019772607833147,-0.00679937144741416,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_xwait * odt_skims['WLK_LRF_WLK_XWAIT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.8130000233650208,-0.0,-0.8130000233650208,-1.3550000190734863,-0.8130000233650208,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_xfers_wlk * (odt_skims['WLK_LRF_WLK_BOARDS']-1).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.1354999989271164,-0.0,-0.1354999989271164,-0.2709999978542328,-0.1354999989271164,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_wacc * df.origin_walk_time # (2),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_wegr * df.destination_walk_time # (2),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_waux * odt_skims['WLK_LRF_WLK_WAUX']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * odt_skims['WLK_LRF_WLK_FAR'],-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.06582008995502249,-0.06582008995502249,-0.06582008995502249,-0.06582008995502249,-0.06582008995502249,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_density_index * df.density_index # (3),0.07308358648941254,0.011172115730584175,0.012926378055647446,0.002769941570101771,0.001566605662352291,0.004141990919879796,0.008588851654663112,0.01220050087441427,0.0008023452670598716,0.009527684864776294,0.010402727880731625,0.025067236489239322,0.014353150104394863,0.004286650885881719,0.00690093408466648,0.012095956899648088,0.02317116824341336,0.006497116985101082,0.014141257707810159,0.0015135977632496564,0.0018380419453556758,0.0018286077715914365,0.008308867027305005,0.009538028581393009,0.005484789048978042
@c_topology_trn * df.trip_topology # (2),-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962
@c_age010_trn * (df.age <= 10) # (2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
walk_express_available == False,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_ivt * odt_skims['WLK_EXP_WLK_TOTIVT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.3042435944080353,-0.9257089495658875,-1.2637650966644287,-2.088968276977539,-1.6838042736053467,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@(c_ivt_exp-c_ivt) * odt_skims['WLK_EXP_WLK_KEYIVT']/100,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_short_i_wait * (odt_skims['WLK_EXP_WLK_IWAIT']/100).clip(upper=waitThresh),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.5419999957084656,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_long_i_wait * (odt_skims['WLK_EXP_WLK_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.1422993689775467,-0.1388983577489853,-0.00679937144741416,-0.01019772607833147,-0.00679937144741416,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_xwait * odt_skims['WLK_EXP_WLK_XWAIT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.8130000233650208,-0.0,-0.8130000233650208,-1.3550000190734863,-0.8130000233650208,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_xfers_wlk * (odt_skims['WLK_EXP_WLK_BOARDS']-1).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.1354999989271164,-0.0,-0.1354999989271164,-0.2709999978542328,-0.1354999989271164,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_wacc * df.origin_walk_time # (3),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_wegr * df.destination_walk_time # (3),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_waux * odt_skims['WLK_EXP_WLK_WAUX']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * odt_skims['WLK_EXP_WLK_FAR'],-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.06582008995502249,-0.06582008995502249,-0.06582008995502249,-0.06582008995502249,-0.06582008995502249,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_density_index * df.density_index # (4),0.07308358648941254,0.011172115730584175,0.012926378055647446,0.002769941570101771,0.001566605662352291,0.004141990919879796,0.008588851654663112,0.01220050087441427,0.0008023452670598716,0.009527684864776294,0.010402727880731625,0.025067236489239322,0.014353150104394863,0.004286650885881719,0.00690093408466648,0.012095956899648088,0.02317116824341336,0.006497116985101082,0.014141257707810159,0.0015135977632496564,0.0018380419453556758,0.0018286077715914365,0.008308867027305005,0.009538028581393009,0.005484789048978042
@c_topology_trn * df.trip_topology # (3),-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962
@c_age010_trn * (df.age <= 10) # (3),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
walk_heavyrail_available == False,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_ivt * odt_skims['WLK_HVY_WLK_TOTIVT']/100,-2.1083502769470215,-1.9306391477584839,-2.3818488121032715,-0.0,-0.0,-1.5118845701217651,-1.4681153297424316,-0.0,-0.3042435944080353,-0.9257089495658875,-0.6410478353500366,-1.3528345823287964,-0.9229122400283813,-2.0157277584075928,-2.1396780014038086,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@(c_ivt_hvy-c_ivt) * odt_skims['WLK_HVY_WLK_KEYIVT']/100,0.28588494658470154,0.28588494658470154,0.21684065461158752,0.0,0.0,0.21684065461158752,0.1994023323059082,0.0,0.0,0.0,0.05738316476345062,0.08421488106250763,0.11375604569911957,0.2897423505783081,0.32233062386512756,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_short_i_wait * (odt_skims['WLK_HVY_WLK_IWAIT']/100).clip(upper=waitThresh),-0.22269153594970703,-0.10074153542518616,-0.4318710267543793,-0.0,-0.0,-0.35057103633880615,-0.4318710267543793,-0.0,-0.5419999957084656,-0.5419999957084656,-0.2217647284269333,-0.5419999957084656,-0.2217647284269333,-0.3529720604419708,-0.5419999957084656,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_long_i_wait * (odt_skims['WLK_HVY_WLK_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.1422993689775467,-0.1388983577489853,-0.0,-0.013886031694710255,-0.0,-0.0,-0.14938603341579437,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_xwait * odt_skims['WLK_HVY_WLK_XWAIT']/100,-1.2195000648498535,-1.2195000648498535,-1.4227501153945923,-0.0,-0.0,-1.4227501153945923,-1.4227501153945923,-0.0,-0.8130000233650208,-0.0,-0.8130000233650208,-1.0162500143051147,-0.8130000233650208,-1.2195000648498535,-1.2195000648498535,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_xfers_wlk * (odt_skims['WLK_HVY_WLK_BOARDS']-1).clip(0),-0.2709999978542328,-0.2709999978542328,-0.406499981880188,-0.0,-0.0,-0.406499981880188,-0.406499981880188,-0.0,-0.1354999989271164,-0.0,-0.1354999989271164,-0.2709999978542328,-0.1354999989271164,-0.2709999978542328,-0.2709999978542328,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_wacc * df.origin_walk_time # (4),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_wegr * df.destination_walk_time # (4),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_waux * odt_skims['WLK_HVY_WLK_WAUX']/100,-0.10840000212192535,-0.23848000168800354,-0.10840000212192535,-0.0,-0.0,-0.10840000212192535,-0.10840000212192535,-0.0,-0.0,-0.0,-0.05420000106096268,-0.10840000212192535,-0.05420000106096268,-0.10840000212192535,-0.10840000212192535,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * odt_skims['WLK_HVY_WLK_FAR'],-0.2769319340329835,-0.2769319340329835,-0.22427586206896552,-0.0,-0.0,-0.22427586206896552,-0.21940029985007495,-0.0,-0.06582008995502249,-0.06582008995502249,-0.06289475262368815,-0.12871484257871063,-0.06289475262368815,-0.22281319340329836,-0.22963898050974513,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_density_index * df.density_index # (5),0.07308358648941254,0.011172115730584175,0.012926378055647446,0.002769941570101771,0.001566605662352291,0.004141990919879796,0.008588851654663112,0.01220050087441427,0.0008023452670598716,0.009527684864776294,0.010402727880731625,0.025067236489239322,0.014353150104394863,0.004286650885881719,0.00690093408466648,0.012095956899648088,0.02317116824341336,0.006497116985101082,0.014141257707810159,0.0015135977632496564,0.0018380419453556758,0.0018286077715914365,0.008308867027305005,0.009538028581393009,0.005484789048978042
@c_topology_trn * df.trip_topology # (4),-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962
@c_age010_trn * (df.age <= 10) # (4),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
walk_commuter_available == False,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_ivt * odt_skims['WLK_COM_WLK_TOTIVT']/100,-2.1083502769470215,-2.17887806892395,-0.0,-0.0,-0.0,-1.5118845701217651,-1.4681153297424316,-0.0,-0.3042435944080353,-0.9257089495658875,-0.6410478353500366,-1.3528345823287964,-0.9229122400283813,-2.0157277584075928,-2.1396780014038086,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@(c_ivt_com-c_ivt) * odt_skims['WLK_COM_WLK_KEYIVT']/100,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_short_i_wait * (odt_skims['WLK_COM_WLK_IWAIT']/100).clip(upper=waitThresh),-0.22269153594970703,-0.27256640791893005,-0.0,-0.0,-0.0,-0.35057103633880615,-0.4318710267543793,-0.0,-0.5419999957084656,-0.5419999957084656,-0.2217647284269333,-0.5419999957084656,-0.2217647284269333,-0.3529720604419708,-0.5419999957084656,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_long_i_wait * (odt_skims['WLK_COM_WLK_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.1422993689775467,-0.1388983577489853,-0.0,-0.013886031694710255,-0.0,-0.0,-0.14938603341579437,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_xwait * odt_skims['WLK_COM_WLK_XWAIT']/100,-1.2195000648498535,-1.2195000648498535,-0.0,-0.0,-0.0,-1.4227501153945923,-1.4227501153945923,-0.0,-0.8130000233650208,-0.0,-0.8130000233650208,-1.0162500143051147,-0.8130000233650208,-1.2195000648498535,-1.2195000648498535,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_xfers_wlk * (odt_skims['WLK_COM_WLK_BOARDS']-1).clip(0),-0.2709999978542328,-0.2709999978542328,-0.0,-0.0,-0.0,-0.406499981880188,-0.406499981880188,-0.0,-0.1354999989271164,-0.0,-0.1354999989271164,-0.2709999978542328,-0.1354999989271164,-0.2709999978542328,-0.2709999978542328,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_wacc * df.origin_walk_time # (5),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_wegr * df.destination_walk_time # (5),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_waux * odt_skims['WLK_COM_WLK_WAUX']/100,-0.10840000212192535,-0.16259999573230743,-0.0,-0.0,-0.0,-0.10840000212192535,-0.10840000212192535,-0.0,-0.0,-0.0,-0.05420000106096268,-0.10840000212192535,-0.05420000106096268,-0.10840000212192535,-0.10840000212192535,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * odt_skims['WLK_COM_WLK_FAR'],-0.2769319340329835,-0.2769319340329835,-0.0,-0.0,-0.0,-0.22427586206896552,-0.21940029985007495,-0.0,-0.06582008995502249,-0.06582008995502249,-0.06289475262368815,-0.12871484257871063,-0.06289475262368815,-0.22281319340329836,-0.22963898050974513,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@c_density_index * df.density_index # (6),0.07308358648941254,0.011172115730584175,0.012926378055647446,0.002769941570101771,0.001566605662352291,0.004141990919879796,0.008588851654663112,0.01220050087441427,0.0008023452670598716,0.009527684864776294,0.010402727880731625,0.025067236489239322,0.014353150104394863,0.004286650885881719,0.00690093408466648,0.012095956899648088,0.02317116824341336,0.006497116985101082,0.014141257707810159,0.0015135977632496564,0.0018380419453556758,0.0018286077715914365,0.008308867027305005,0.009538028581393009,0.005484789048978042
@c_topology_trn * df.trip_topology # (5),-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962
@c_age010_trn * (df.age < 10),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (3),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (3),1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_density_index * df.density_index # (7),0.07308358648941254,0.011172115730584175,0.012926378055647446,0.002769941570101771,0.001566605662352291,0.004141990919879796,0.008588851654663112,0.01220050087441427,0.0008023452670598716,0.009527684864776294,0.010402727880731625,0.025067236489239322,0.014353150104394863,0.004286650885881719,0.00690093408466648,0.012095956899648088,0.02317116824341336,0.006497116985101082,0.014141257707810159,0.0015135977632496564,0.0018380419453556758,0.0018286077715914365,0.008308867027305005,0.009538028581393009,0.005484789048978042
@c_topology_trn * df.trip_topology # (6),-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962
@c_age010_trn * (df.age < 10) # (2),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
outbound & ~drive_local_available_outbound,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * c_ivt * odt_skims['DRV_LOC_WLK_TOTIVT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_short_i_wait * (odt_skims['DRV_LOC_WLK_IWAIT']/100).clip(upper=waitThresh),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_long_i_wait * (odt_skims['DRV_LOC_WLK_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_xwait * odt_skims['DRV_LOC_WLK_XWAIT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_xfers_wlk * (odt_skims['DRV_LOC_WLK_BOARDS']-1).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dtim * odt_skims['DRV_LOC_WLK_DTIM']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_wegr * df.destination_walk_time,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_waux * odt_skims['DRV_LOC_WLK_WAUX']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * df.c_cost * (odt_skims['DRV_LOC_WLK_FAR'] + costPerMile*odt_skims['DRV_LOC_WLK_DDIST']/100),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dacc_ratio * (odt_skims['DRV_LOC_WLK_DDIST']/100)/ (od_skims['DIST']),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_local_available_inbound,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.inbound * c_ivt * odt_skims['WLK_LOC_DRV_TOTIVT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.4908677054443359,-0.9257088735351562,-1.167083201171875,-1.9579046035156251,-1.6838042470703123,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_short_i_wait * (odt_skims['WLK_LOC_DRV_IWAIT']/100).clip(upper=waitThresh),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.542,-0.542,-0.542,-0.542,-0.542,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_long_i_wait * (odt_skims['WLK_LOC_DRV_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.006799371433258056,-0.13889835472106934,-0.006799371433258056,-0.14569772615432738,-0.006799371433258056,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_xwait * odt_skims['WLK_LOC_DRV_XWAIT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.813,-0.0,-0.813,-1.355,-0.813,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_xfers_wlk * (odt_skims['WLK_LOC_DRV_BOARDS']-1).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.1355,-0.0,-0.1355,-0.271,-0.1355,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_dtim * odt_skims['WLK_LOC_DRV_DTIM']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.078048,-0.078048,-0.078048,-0.078048,-0.078048,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_wacc * df.origin_walk_time,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@df.inbound * c_waux * odt_skims['WLK_LOC_DRV_WAUX']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * df.c_cost * (odt_skims['WLK_LOC_DRV_FAR'] + costPerMile*odt_skims['WLK_LOC_DRV_DDIST']/100),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0701004461331346,-0.0701004461331346,-0.0701004461331346,-0.0701004461331346,-0.0701004461331346,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dacc_ratio * (odt_skims['WLK_LOC_DRV_DDIST']/100)/ (od_skims['DIST']),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (4),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (4),1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_density_index * df.density_index # (8),0.07308358648941254,0.011172115730584175,0.012926378055647446,0.002769941570101771,0.001566605662352291,0.004141990919879796,0.008588851654663112,0.01220050087441427,0.0008023452670598716,0.009527684864776294,0.010402727880731625,0.025067236489239322,0.014353150104394863,0.004286650885881719,0.00690093408466648,0.012095956899648088,0.02317116824341336,0.006497116985101082,0.014141257707810159,0.0015135977632496564,0.0018380419453556758,0.0018286077715914365,0.008308867027305005,0.009538028581393009,0.005484789048978042
@c_topology_trn * df.trip_topology # (7),-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962
@c_age010_trn * (df.age < 10) # (3),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
outbound & ~drive_lrf_available_outbound,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * c_ivt * odt_skims['DRV_LRF_WLK_TOTIVT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * (c_ivt_lrt-c_ivt)*odt_skims['DRV_LRF_WLK_KEYIVT']/100,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * (c_ivt_ferry-c_ivt_lrt)*odt_skims['DRV_LRF_WLK_FERRYIVT']/100,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * c_short_i_wait * (odt_skims['DRV_LRF_WLK_IWAIT']/100).clip(upper=waitThresh),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_long_i_wait * (odt_skims['DRV_LRF_WLK_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_xwait * odt_skims['DRV_LRF_WLK_XWAIT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_xfers_drv * (odt_skims['DRV_LRF_WLK_BOARDS']-1).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dtim * odt_skims['DRV_LRF_WLK_DTIM']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_wegr * df.destination_walk_time # (2),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_waux * odt_skims['DRV_LRF_WLK_WAUX']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * df.c_cost * (odt_skims['DRV_LRF_WLK_FAR'] + costPerMile * odt_skims['DRV_LRF_WLK_DDIST']/100),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dacc_ratio * (odt_skims['DRV_LRF_WLK_DDIST']/100) / od_skims['DIST'],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_lrf_available_inbound,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.inbound * c_ivt * odt_skims['WLK_LRF_DRV_TOTIVT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.3129236867675781,-0.992884387939453,-1.2550850258789061,-0.0,-1.8409301264648437,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * (c_ivt_lrt-c_ivt)*odt_skims['WLK_LRF_DRV_KEYIVT']/100,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * (c_ivt_ferry-c_ivt_lrt)*odt_skims['WLK_LRF_DRV_FERRYIVT']/100,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * c_short_i_wait * (odt_skims['WLK_LRF_DRV_IWAIT']/100).clip(upper=waitThresh),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.542,-0.542,-0.542,-0.0,-0.29139545230865477,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_long_i_wait * (odt_skims['WLK_LRF_DRV_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.14229937143325805,-0.14229937143325805,-0.006799371433258056,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_xwait * odt_skims['WLK_LRF_DRV_XWAIT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.813,-0.813,-0.813,-0.0,-1.355,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_xfers_drv * (odt_skims['WLK_LRF_DRV_BOARDS']-1).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.4065,-0.4065,-0.4065,-0.0,-0.813,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_dtim * odt_skims['WLK_LRF_DRV_DTIM']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.165852,-0.165852,-0.165852,-0.0,-0.165852,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_wacc * df.origin_walk_time # (2),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@df.inbound * c_waux * odt_skims['WLK_LRF_DRV_WAUX']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * df.c_cost * (odt_skims['WLK_LRF_DRV_FAR'] + costPerMile * odt_skims['WLK_LRF_DRV_DDIST']/100),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.07759105828555449,-0.07759105828555449,-0.07759105828555449,-0.0,-0.07759105828555449,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_dacc_ratio * (odt_skims['WLK_LRF_DRV_DDIST']/100)/ od_skims['DIST'],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (5),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (5),1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_density_index * df.density_index # (9),0.07308358648941254,0.011172115730584175,0.012926378055647446,0.002769941570101771,0.001566605662352291,0.004141990919879796,0.008588851654663112,0.01220050087441427,0.0008023452670598716,0.009527684864776294,0.010402727880731625,0.025067236489239322,0.014353150104394863,0.004286650885881719,0.00690093408466648,0.012095956899648088,0.02317116824341336,0.006497116985101082,0.014141257707810159,0.0015135977632496564,0.0018380419453556758,0.0018286077715914365,0.008308867027305005,0.009538028581393009,0.005484789048978042
@c_topology_trn * df.trip_topology # (8),-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962
@c_age010_trn * (df.age < 10) # (4),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
outbound & ~drive_express_available_outbound,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * c_ivt * odt_skims['DRV_EXP_WLK_TOTIVT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * (c_ivt_exp-c_ivt) * odt_skims['DRV_EXP_WLK_KEYIVT']/100,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * c_short_i_wait * (odt_skims['DRV_EXP_WLK_IWAIT']/100).clip(upper=waitThresh),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_long_i_wait * (odt_skims['DRV_EXP_WLK_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_xwait * odt_skims['DRV_EXP_WLK_XWAIT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_xfers_drv * (odt_skims['DRV_EXP_WLK_BOARDS']-1).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dtim * odt_skims['DRV_EXP_WLK_DTIM']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_wegr * df.destination_walk_time # (3),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_waux * odt_skims['DRV_EXP_WLK_WAUX']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * df.c_cost * (odt_skims['DRV_EXP_WLK_FAR'] + costPerMile * odt_skims['DRV_EXP_WLK_DDIST']/100),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dacc_ratio * (odt_skims['DRV_EXP_WLK_DDIST']/100) / od_skims['DIST'],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_express_available_inbound,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.inbound * c_ivt * odt_skims['WLK_EXP_DRV_TOTIVT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.3129236867675781,-0.992884387939453,-1.23110959765625,-0.0,-1.8169520517578124,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * (c_ivt_exp-c_ivt) * odt_skims['WLK_EXP_DRV_KEYIVT']/100,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.11388096093749997,0.0,0.11388096093749997,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * c_short_i_wait * (odt_skims['WLK_EXP_DRV_IWAIT']/100).clip(upper=waitThresh),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.542,-0.542,-0.542,-0.0,-0.28189418573379516,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_long_i_wait * (odt_skims['WLK_EXP_DRV_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.14229937143325805,-0.14229937143325805,-0.0036313952445983884,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_xwait * odt_skims['WLK_EXP_DRV_XWAIT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.813,-0.813,-0.813,-0.0,-1.355,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_xfers_drv * (odt_skims['WLK_EXP_DRV_BOARDS']-1).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.4065,-0.4065,-0.4065,-0.0,-0.813,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_dtim * odt_skims['WLK_EXP_DRV_DTIM']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.165852,-0.165852,-0.165852,-0.0,-0.165852,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_wacc * df.origin_walk_time # (3),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@df.inbound * c_waux * odt_skims['WLK_EXP_DRV_WAUX']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * df.c_cost * (odt_skims['WLK_EXP_DRV_FAR'] + costPerMile * odt_skims['WLK_EXP_DRV_DDIST']/100),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.07759105828555449,-0.07759105828555449,-0.14341114824057696,-0.0,-0.14341114824057696,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_dacc_ratio * (odt_skims['WLK_EXP_DRV_DDIST']/100) / od_skims['DIST'],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (6),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (6),1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_density_index * df.density_index # (10),0.07308358648941254,0.011172115730584175,0.012926378055647446,0.002769941570101771,0.001566605662352291,0.004141990919879796,0.008588851654663112,0.01220050087441427,0.0008023452670598716,0.009527684864776294,0.010402727880731625,0.025067236489239322,0.014353150104394863,0.004286650885881719,0.00690093408466648,0.012095956899648088,0.02317116824341336,0.006497116985101082,0.014141257707810159,0.0015135977632496564,0.0018380419453556758,0.0018286077715914365,0.008308867027305005,0.009538028581393009,0.005484789048978042
@c_topology_trn * df.trip_topology # (9),-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962
@c_age010_trn * (df.age < 10) # (5),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
outbound & ~drive_heavyrail_available_outbound,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * c_ivt * odt_skims['DRV_HVY_WLK_TOTIVT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * (c_ivt_hvy-c_ivt) * odt_skims['DRV_HVY_WLK_KEYIVT']/100,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * c_short_i_wait * (odt_skims['DRV_HVY_WLK_IWAIT']/100).clip(upper=waitThresh),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_long_i_wait * (odt_skims['DRV_HVY_WLK_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_xwait * odt_skims['DRV_HVY_WLK_XWAIT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_xfers_drv * (odt_skims['DRV_HVY_WLK_BOARDS']-1).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dtim * odt_skims['DRV_HVY_WLK_DTIM']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_wegr * df.destination_walk_time # (4),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_waux * odt_skims['DRV_HVY_WLK_WAUX']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * df.c_cost * (odt_skims['DRV_HVY_WLK_FAR'] + costPerMile * odt_skims['DRV_HVY_WLK_DDIST']/100),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dacc_ratio * (odt_skims['DRV_HVY_WLK_DDIST']/100) / od_skims['DIST'],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_heavyrail_available_inbound,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.inbound * c_ivt * odt_skims['WLK_HVY_DRV_TOTIVT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * (c_ivt_hvy-c_ivt) * odt_skims['WLK_HVY_DRV_KEYIVT']/100,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * c_short_i_wait * (odt_skims['WLK_HVY_DRV_IWAIT']/100).clip(upper=waitThresh),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_long_i_wait * (odt_skims['WLK_HVY_DRV_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_xwait * odt_skims['WLK_HVY_DRV_XWAIT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_xfers_drv * (odt_skims['WLK_HVY_DRV_BOARDS']-1).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dtim * odt_skims['DRV_HVY_WLK_DTIM']/100 # (2),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_wacc * df.origin_walk_time # (4),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@c_waux * odt_skims['WLK_HVY_DRV_WAUX']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * df.c_cost * (odt_skims['WLK_HVY_DRV_FAR'] + costPerMile * odt_skims['WLK_HVY_DRV_DDIST']/100),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_dacc_ratio * (odt_skims['WLK_HVY_DRV_DDIST']/100)/ od_skims['DIST'],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0 # (7),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (7),1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@c_density_index * df.density_index # (11),0.07308358648941254,0.011172115730584175,0.012926378055647446,0.002769941570101771,0.001566605662352291,0.004141990919879796,0.008588851654663112,0.01220050087441427,0.0008023452670598716,0.009527684864776294,0.010402727880731625,0.025067236489239322,0.014353150104394863,0.004286650885881719,0.00690093408466648,0.012095956899648088,0.02317116824341336,0.006497116985101082,0.014141257707810159,0.0015135977632496564,0.0018380419453556758,0.0018286077715914365,0.008308867027305005,0.009538028581393009,0.005484789048978042
@c_topology_trn * df.trip_topology # (10),-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962,-0.05962
@c_age010_trn * (df.age < 10) # (6),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
outbound & ~drive_commuter_available_outbound,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * c_ivt * odt_skims['DRV_COM_WLK_TOTIVT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * (c_ivt_com-c_ivt) * odt_skims['DRV_COM_WLK_KEYIVT']/100,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.outbound * c_short_i_wait * (odt_skims['DRV_COM_WLK_IWAIT']/100).clip(upper=waitThresh),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_long_i_wait * (odt_skims['DRV_COM_WLK_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_xwait * odt_skims['DRV_COM_WLK_XWAIT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_xfers_drv * (odt_skims['DRV_COM_WLK_BOARDS']-1).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dtim * odt_skims['DRV_COM_WLK_DTIM']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_wegr * df.destination_walk_time # (5),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_waux * odt_skims['DRV_COM_WLK_WAUX']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * df.c_cost * (odt_skims['DRV_COM_WLK_FAR'] + costPerMile * odt_skims['DRV_COM_WLK_DDIST']/100),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.outbound * c_dacc_ratio * (odt_skims['DRV_COM_WLK_DDIST']/100) / od_skims['DIST'],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
inbound & ~drive_commuter_available_inbound,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.inbound * c_ivt * odt_skims['WLK_COM_DRV_TOTIVT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.5813085632324219,-1.5456078764648435,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * (c_ivt_com-c_ivt) * odt_skims['WLK_COM_DRV_KEYIVT']/100,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.08671999999999996,0.30351999999999985,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.inbound * c_short_i_wait * (odt_skims['WLK_COM_DRV_IWAIT']/100).clip(upper=waitThresh),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.21496803321838379,-0.3319966577529907,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_long_i_wait * (odt_skims['WLK_COM_DRV_IWAIT']/100-waitThresh).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_xwait * odt_skims['WLK_COM_DRV_XWAIT']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-3.252,-3.252,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_xfers_drv * (odt_skims['WLK_COM_DRV_BOARDS']-1).clip(0),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.4065,-0.4065,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_dtim * odt_skims['WLK_COM_DRV_DTIM']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.5859019999999999,-0.5859019999999999,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_wacc * df.origin_walk_time # (5),-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972,-0.360972
@df.inbound * c_waux * odt_skims['WLK_COM_DRV_WAUX']/100,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-1.12736,-0.16259999999999997,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * df.c_cost * (odt_skims['WLK_COM_DRV_FAR'] + costPerMile * odt_skims['WLK_COM_DRV_DDIST']/100),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.370648667365536,-0.5032639597193591,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.inbound * c_dacc_ratio * (odt_skims['WLK_COM_DRV_DDIST']/100) / od_skims['DIST'],0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_ivt * odt_skims['HOV2TOLL_TIME'] # (2),-1.470445990562439,-1.3644850254058838,-0.6357659697532654,-0.6474189758300781,-0.657446026802063,-0.5531110167503357,-0.49972403049468994,-0.47587600350379944,-0.17642101645469666,-0.5723520517349243,-0.5880700349807739,-0.8528370261192322,-0.7642200589179993,-1.2902309894561768,-1.321395993232727,-1.112726092338562,-0.9796650409698486,-1.1062220335006714,-1.0726181268692017,-0.7818350195884705,-1.5357569456100464,-1.7091970443725586,-1.8823660612106323,-1.9991669654846191,-1.788329005241394
@c_ivt * 1.5 * df.origTaxiWaitTime
@df.c_cost * odt_skims['HOV2TOLL_VTOLL'],-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * odt_skims['HOV2TOLL_BTOLL'],-0.021803514838039963,-0.021325709963774215,-0.007362099136512676,-0.008590741038858622,-0.009785253224522993,-0.009336701463187474,-0.00851760686162351,-0.0066112625734023244,-0.001647940085781389,-0.005519136282993757,-0.006660017916609322,-0.009195310642408288,-0.010092414165079326,-0.01996055105458135,-0.0213062072685276,-0.020682134039791626,-0.019580257796669293,-0.021067303901455035,-0.021096557944324957,-0.013724707460188973,-0.03161314364180214,-0.03387540793354543,-0.03883385381741502,-0.039823592352688404,-0.029228995874224752
@df.c_cost * (Taxi_baseFare + odt_skims['HOV2TOLL_DIST'] * Taxi_costPerMile + odt_skims['HOV2TOLL_TIME'] * Taxi_costPerMinute)*100,-4.81695779139849,-4.707063098089627,-1.8420362616085755,-1.9585134400420638,-2.3550427010463273,-2.1220885301672894,-1.9319417152233211,-1.590115784697983,-0.4899940122978977,-1.4650575877451288,-1.510497881933667,-2.1008797675594577,-2.276692678059774,-4.251879936801618,-4.655576429009616,-4.452070658396388,-4.1533933716735385,-4.465478528893512,-4.4874671389280945,-3.013243600596552,-6.233795681199927,-7.222657841306397,-8.231655055650885,-8.478066011854912,-6.35212641542998
@c_ivt * odt_skims['HOV2TOLL_TIME'] ,-1.470445990562439,-1.3644850254058838,-0.6357659697532654,-0.6474189758300781,-0.657446026802063,-0.5531110167503357,-0.49972403049468994,-0.47587600350379944,-0.17642101645469666,-0.5723520517349243,-0.5880700349807739,-0.8528370261192322,-0.7642200589179993,-1.2902309894561768,-1.321395993232727,-1.112726092338562,-0.9796650409698486,-1.1062220335006714,-1.0726181268692017,-0.7818350195884705,-1.5357569456100464,-1.7091970443725586,-1.8823660612106323,-1.9991669654846191,-1.788329005241394
@c_ivt * 1.5 * df.origSingleTNCWaitTime
@df.c_cost * odt_skims['HOV2TOLL_VTOLL'] # (2),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']),-0.18484231246193308,-0.18420848044605626,-0.014724198273025351,-0.017181482077717244,-0.017581276170996533,-0.01865390209100772,-0.017459387115524267,-0.013066506374650809,-0.003295880171562778,-0.01277397338546913,-0.013320035833218644,-0.02018970307403061,-0.021710877965558237,-0.04144227886056971,-0.04406533371497845,-0.041315513201346105,-0.03914588950184331,-0.0421199817114148,-0.04231500494412218,-0.027595681414968785,-0.2374788780109457,-0.24196928152744915,-0.2508866889919298,-0.25416305251915056,-0.23428539070918641
"@df.c_cost * np.maximum(TNC_single_baseFare + odt_skims['HOV2TOLL_DIST'] * TNC_single_costPerMile + odt_skims['HOV2TOLL_TIME'] * TNC_single_costPerMinute, TNC_single_costMinimum) * 100",-3.31263229118473,-3.2143558924273217,-1.3187859784859768,-1.389959470871864,-1.622543339765054,-1.4536391372337512,-1.32618718251653,-1.120706498976769,-0.3864029616966419,-1.0800101991393218,-1.1114380690361607,-1.5396099230124316,-1.6122316104826002,-2.926804962158203,-3.1704608790270394,-2.9843901757464772,-2.7680663023895766,-2.990011661192109,-2.991713264842798,-2.0439235651796905,-4.153340179123085,-4.782005078088397,-5.422224663730146,-5.602996012674815,-4.304546141388534
@c_ivt * odt_skims['HOV2TOLL_TIME'] * TNC_shared_IVTFactor,-2.2056689262390137,-2.0467276573181152,-0.9536489248275757,-0.9711284637451172,-0.9861690402030945,-0.8296664953231812,-0.7495860457420349,-0.7138140201568604,-0.2646315097808838,-0.8585280776023865,-0.8821050524711609,-1.2792555093765259,-1.1463301181793213,-1.9353464841842651,-1.9820940494537354,-1.6690890789031982,-1.469497561454773,-1.6593329906463623,-1.6089272499084473,-1.1727524995803833,-2.303635358810425,-2.563795566558838,-2.8235490322113037,-2.9987504482269287,-2.6824934482574463
@c_ivt  * 1.5 * df.origSharedTNCWaitTime
@df.c_cost * odt_skims['HOV2TOLL_VTOLL'] # (3),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@df.c_cost * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']) # (2),-0.18484231246193308,-0.18420848044605626,-0.014724198273025351,-0.017181482077717244,-0.017581276170996533,-0.01865390209100772,-0.017459387115524267,-0.013066506374650809,-0.003295880171562778,-0.01277397338546913,-0.013320035833218644,-0.02018970307403061,-0.021710877965558237,-0.04144227886056971,-0.04406533371497845,-0.041315513201346105,-0.03914588950184331,-0.0421199817114148,-0.04231500494412218,-0.027595681414968785,-0.2374788780109457,-0.24196928152744915,-0.2508866889919298,-0.25416305251915056,-0.23428539070918641
"@df.c_cost * np.maximum(TNC_shared_baseFare + odt_skims['HOV2TOLL_DIST'] * TNC_shared_costPerMile + odt_skims['HOV2TOLL_TIME']* TNC_shared_costPerMinute, TNC_shared_costMinimum) * 100",-1.3961270169053657,-1.3561328215363144,-0.5950379541788859,-0.6234917374457912,-0.7162541517861064,-0.6481279787809953,-0.596919919633079,-0.5148495799097521,-0.2198829850478508,-0.4993891930186945,-0.5120364193437339,-0.6847385420792106,-0.7129827169392599,-1.2409622083718272,-1.3383027158219596,-1.2625170945334827,-1.1752688505981994,-1.2647062655653374,-1.2651206466926448,-0.8851484969566608,-1.7316581856471664,-1.9835394191027045,-2.240023296075961,-2.3129765070467694,-1.7938947715930853
tour_mode_is_auto,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
tour_mode_is_walk,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
tour_mode_is_bike,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
tour_mode_is_walk_transit,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
tour_mode_is_drive_transit,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
tour_mode_is_ride_hail,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@sov_ASC_sr2 * (df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@sov_ASC_sr3p * (df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@sov_ASC_walk * (df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@sov_ASC_rh * (df.is_indiv & df.i_tour_mode.isin(I_SOV_MODES)),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@sr2_ASC_sr2 * (df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@sr2_ASC_sr3p * (df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@sr2_ASC_walk * (df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@sr2_ASC_rh * (df.is_indiv & df.i_tour_mode.isin(I_SR2_MODES)),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@sr3p_ASC_sr2 * (df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)),-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407,-2.7407
@sr3p_ASC_sr3p * (df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)),-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718,-1.7718
@sr3p_ASC_walk * (df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)),-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127,-1.2127
@sr3p_ASC_rh * (df.is_indiv & df.i_tour_mode.isin(I_SR3P_MODES)),-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714,-6.6714
@walk_ASC_rh * df.is_indiv * (df.i_tour_mode == I_WALK_MODE),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@bike_ASC_walk * df.is_indiv * (df.i_tour_mode == I_BIKE_MODE),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@bike_ASC_rh * df.is_indiv * (df.i_tour_mode == I_BIKE_MODE),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@walk_transit_ASC_lightrail * (df.is_indiv & df.tour_mode_is_walk_transit & ~df.walk_ferry_available),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@walk_transit_ASC_ferry * (df.is_indiv & df.tour_mode_is_walk_transit & df.walk_ferry_available),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@walk_transit_ASC_express * (df.is_indiv & df.tour_mode_is_walk_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@walk_transit_ASC_heavyrail * (df.is_indiv & df.tour_mode_is_walk_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@walk_transit_ASC_commuter * (df.is_indiv & df.tour_mode_is_walk_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@walk_transit_ASC_sr2 * (df.is_indiv & df.tour_mode_is_walk_transit),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@walk_transit_ASC_sr3p * (df.is_indiv & df.tour_mode_is_walk_transit),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@walk_transit_ASC_walk * (df.is_indiv & df.tour_mode_is_walk_transit),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@walk_transit_ASC_rh * (df.is_indiv & df.tour_mode_is_walk_transit),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@drive_transit_ASC_lightrail * (df.is_indiv & df.tour_mode_is_drive_transit & ~df.drive_ferry_available),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@drive_transit_ASC_ferry * (df.is_indiv & df.tour_mode_is_drive_transit & df.drive_ferry_available),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@drive_transit_ASC_express * (df.is_indiv & df.tour_mode_is_drive_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@drive_transit_ASC_heavyrail * (df.is_indiv & df.tour_mode_is_drive_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@drive_transit_ASC_commuter * (df.is_indiv & df.tour_mode_is_drive_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@drive_transit_ASC_rh * (df.is_indiv & df.tour_mode_is_drive_transit),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@ride_hail_ASC_sr2 * (df.is_indiv & df.tour_mode_is_ride_hail),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@ride_hail_ASC_sr3p * (df.is_indiv & df.tour_mode_is_ride_hail),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@ride_hail_ASC_walk * (df.is_indiv & df.tour_mode_is_ride_hail),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ride_hail_ASC_walk_transit * (df.is_indiv & df.tour_mode_is_ride_hail),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ride_hail_ASC_taxi * (df.is_indiv & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@ride_hail_ASC_tnc_single * (df.is_indiv & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ride_hail_ASC_tnc_shared * (df.is_indiv & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_auto_ASC_sr2 * (df.is_joint & df.i_tour_mode.isin(I_AUTO_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_auto_ASC_sr3p * (df.is_joint & df.i_tour_mode.isin(I_AUTO_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_auto_ASC_walk * (df.is_joint & df.i_tour_mode.isin(I_AUTO_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_auto_ASC_rh * (df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_walk_ASC_rh * (df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_bike_ASC_walk * df.is_joint * (df.i_tour_mode == I_BIKE_MODE),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_bike_ASC_rh * df.is_joint * (df.i_tour_mode == I_BIKE_MODE),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_walk_transit_ASC_lightrail * (df.is_joint & df.tour_mode_is_walk_transit & ~df.walk_ferry_available),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_walk_transit_ASC_ferry * (df.is_joint & df.tour_mode_is_walk_transit & df.walk_ferry_available),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_walk_transit_ASC_express * (df.is_joint & df.tour_mode_is_walk_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_walk_transit_ASC_heavyrail * (df.is_joint & df.tour_mode_is_walk_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_walk_transit_ASC_commuter * (df.is_joint & df.tour_mode_is_walk_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_walk_transit_ASC_sr2 * (df.is_joint & df.tour_mode_is_walk_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_walk_transit_ASC_sr3p * (df.is_joint & df.tour_mode_is_walk_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_walk_transit_ASC_walk * (df.is_joint & df.tour_mode_is_walk_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_walk_transit_ASC_rh * (df.is_joint & df.tour_mode_is_walk_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_drive_transit_ASC_lightrail * (df.is_joint & df.tour_mode_is_drive_transit & ~df.drive_ferry_available),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_drive_transit_ASC_ferry * (df.is_joint & df.tour_mode_is_drive_transit & df.drive_ferry_available),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_drive_transit_ASC_express * (df.is_joint & df.tour_mode_is_drive_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_drive_transit_ASC_heavyrail * (df.is_joint & df.tour_mode_is_drive_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_drive_transit_ASC_commuter * (df.is_joint & df.tour_mode_is_drive_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_drive_transit_ASC_rh * (df.is_joint & df.tour_mode_is_drive_transit),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_ride_hail_ASC_sr2 * (df.is_joint & df.tour_mode_is_ride_hail),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_ride_hail_ASC_sr3p * (df.is_joint & df.tour_mode_is_ride_hail),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_ride_hail_ASC_walk * (df.is_joint & df.tour_mode_is_ride_hail),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_ride_hail_ASC_walk_transit * (df.is_joint & df.tour_mode_is_ride_hail),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_ride_hail_ASC_taxi * (df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_ride_hail_ASC_tnc_single * (df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@joint_ride_hail_ASC_tnc_shared * (df.is_joint & df.i_tour_mode.isin(I_RIDE_HAIL_MODES)),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.tour_mode_is_walk & (od_skims['DISTWALK'] > 3),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.tour_mode_is_walk & (od_skims['DISTBIKE'] > 8),0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(c_origin_density_index*df.origin_density_index).clip(c_origin_density_index_max) if origin_density_applied else 0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@c_walk_express_penalty * ~(df.first_trip | df.first_trip),-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@adjust_tnc_shared,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813,-0.813
