Expression,Label,404,419,440,497,540,551,661,682,747,749,755,772,777,778,779,780,785,790,793,922,1009,1257
sov_available == False,util_DRIVEALONEFREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
auto_ownership == 0,util_DRIVEALONEFREE_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16,util_DRIVEALONEFREE_Unavailable_for_persons_less_than_16,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
is_joint == True,util_DRIVEALONEFREE_Unavailable_for_joint_tours,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_atwork_subtour & ~work_tour_is_SOV,util_DRIVEALONEFREE_Unavailable_if_didn't_drive_to_work,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['SOV_TIME'] + dot_skims['SOV_TIME'],util_DRIVEALONEFREE_In_vehicle_time,44.68000030517578,50.97999954223633,60.30999755859375,76.18000030517578,49.18000030517578,44.87000274658203,63.34000015258789,63.83000183105469,18.270000457763672,15.789999961853027,4.130000114440918,28.510000228881836,18.810001373291016,19.0,10.100000381469727,12.930000305175781,26.420000076293945,37.52000045776367,39.150001525878906,85.30999755859375,99.69999694824219,135.58999633789062
@2 * walktimeshort_multiplier * df.terminal_time,util_DRIVEALONEFREE_Terminal_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['SOV_DIST'] + dot_skims['SOV_DIST']),util_DRIVEALONEFREE_Operating_cost,7.910493854482669,9.335303396656773,11.322798750389817,15.409668368635502,10.1217464021514,9.805852822413865,15.33069450298349,14.313913043478259,2.428429422964756,2.369199337537499,0.5659754217082056,6.252053973013492,2.935174837698643,2.836458133257132,1.665020670826467,1.7900617879441472,4.277721139430284,7.31161299538219,7.72622233812598,18.8976558725337,21.329375611724164,42.26059189277431
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost,util_DRIVEALONEFREE_Parking_cost,0.16186830960314408,0.0,2.3491391356138194,0.4246804553254325,5.376187742089985,0.0,2.117413023164473,0.004304401034999459,0.0,0.0,0.0,0.0,7.409844124846834,2.3468793433277604,0.0,0.0,0.0,0.0,0.0,4.551818618722378,15.414132931768517,0.09651333042049869
@ivt_cost_multiplier * df.ivot * (odt_skims['SOV_BTOLL'] + dot_skims['SOV_BTOLL']),util_DRIVEALONEFREE_Bridge_toll,0.48251873513926624,0.5420689847337073,0.5399100147802075,0.8907346711165901,0.6365217583469007,0.5897451054746063,0.9702548780541369,0.8466566277408171,0.16011993316696144,0.14392803598200898,0.036701648489109936,0.34758620140613283,0.17739129817110486,0.1950224915008316,0.1000299839780427,0.125577211737454,0.25439280977492207,0.41505246827269954,0.4200899275703945,1.2197901598517147,1.370914487824447,9.085637357102698
@(df.age >= 16) & (df.age <= 19),util_DRIVEALONEFREE_Person_is_between_16_and_19_years_old,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
sovtoll_available == False,util_DRIVEALONEPAY_Unavailable,1.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
auto_ownership == 0 # (2),util_DRIVEALONEPAY_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (2),util_DRIVEALONEPAY_Unavailable_for_persons_less_than_16,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
is_joint == True # (2),util_DRIVEALONEPAY_Unavailable_for_joint_tours,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_atwork_subtour & ~work_tour_is_SOV # (2),util_DRIVEALONEPAY_Unavailable_if_didn't_drive_to_work,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@odt_skims['SOVTOLL_TIME'] + dot_skims['SOVTOLL_TIME'],util_DRIVEALONEPAY_In_vehicle_time,44.68000030517578,47.69000244140625,60.30999755859375,76.18000030517578,49.18000030517578,44.87000274658203,63.34000015258789,63.83000183105469,18.270000457763672,15.789999961853027,4.130000114440918,28.510000228881836,18.810001373291016,19.0,10.100000381469727,12.930000305175781,26.420000076293945,37.52000045776367,39.150001525878906,85.30999755859375,99.69999694824219,135.58999633789062
@2 * walktimeshort_multiplier * df.terminal_time # (2),util_DRIVEALONEPAY_Terminal_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['SOVTOLL_DIST'] + dot_skims['SOVTOLL_DIST']),util_DRIVEALONEPAY_Operating_cost,7.910493854482669,9.529446175502335,11.322798750389817,15.409668368635502,10.1217464021514,9.805852822413865,15.33069450298349,14.313913043478259,2.428429422964756,2.369199337537499,0.5659754217082056,6.252053973013492,2.935174837698643,2.836458133257132,1.665020670826467,1.7900617879441472,4.277721139430284,7.31161299538219,7.72622233812598,18.8976558725337,21.329375611724164,42.26059189277431
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost # (2),util_DRIVEALONEPAY_Parking_cost,0.16186830960314408,0.0,2.3491391356138194,0.4246804553254325,5.376187742089985,0.0,2.117413023164473,0.004304401034999459,0.0,0.0,0.0,0.0,7.409844124846834,2.3468793433277604,0.0,0.0,0.0,0.0,0.0,4.551818618722378,15.414132931768517,0.09651333042049869
@ivt_cost_multiplier * df.ivot * (odt_skims['SOVTOLL_BTOLL'] + dot_skims['SOVTOLL_BTOLL']),util_DRIVEALONEPAY_Bridge_toll,0.48251873513926624,0.5614992339035559,0.5399100147802075,0.8907346711165901,0.6365217583469007,0.5897451054746063,0.9702548780541369,0.8466566277408171,0.16011993316696144,0.14392803598200898,0.036701648489109936,0.34758620140613283,0.17739129817110486,0.1950224915008316,0.1000299839780427,0.125577211737454,0.25439280977492207,0.41505246827269954,0.4200899275703945,1.2197901598517147,1.370914487824447,9.085637357102698
@ivt_cost_multiplier * df.ivot * (odt_skims['SOVTOLL_VTOLL'] + dot_skims['SOVTOLL_VTOLL']),util_DRIVEALONEPAY_Value_toll,0.0,0.49835083831375326,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.age >= 16) & (df.age <= 19) # (2),util_DRIVEALONEPAY_Person_is_between_16_and_19_years_old,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov2_available == False,util_SHARED2FREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
is_joint & (number_of_participants > 2),util_SHARED2FREE_Unavailable_based_on_party_size,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['HOV2_TIME'] + dot_skims['HOV2_TIME']),util_SHARED2FREE_In_vehicle_time,44.68000030517578,49.56999969482422,57.660003662109375,76.1500015258789,49.18000030517578,44.87000274658203,63.34000015258789,63.83000183105469,18.270000457763672,15.789999961853027,4.130000114440918,28.510000228881836,18.810001373291016,19.0,10.100000381469727,12.930000305175781,26.420000076293945,37.52000045776367,39.150001525878906,85.30999755859375,99.69999694824219,135.58999633789062
@2 * walktimeshort_multiplier * df.terminal_time # (3),util_SHARED2FREE_Terminal_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV2_DIST'] + dot_skims['HOV2_DIST']),util_SHARED2FREE_Operating_cost,7.910493854482669,9.766366517211363,11.572880357001672,15.42283088878534,10.1217464021514,9.805852822413865,15.33069450298349,14.313913043478259,2.428429422964756,2.369199337537499,0.5659754217082056,6.252053973013492,2.935174837698643,2.836458133257132,1.665020670826467,1.7900617879441472,4.277721139430284,7.31161299538219,7.72622233812598,18.8976558725337,21.329375611724164,42.26059189277431
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost / costShareSr2,util_SHARED2FREE_Parking_cost,0.09249617691608233,0.0,1.342365220350754,0.24267454590024715,3.072107281194277,0.0,1.2099502989511275,0.002459657734285405,0.0,0.0,0.0,0.0,4.23419664276962,1.3410739104730058,0.0,0.0,0.0,0.0,0.0,2.601039210698502,8.808075961010582,0.05515047452599925
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2_BTOLL'] + dot_skims['HOV2_BTOLL']) / costShareSr2,util_SHARED2FREE_Bridge_toll,0.27572499150815216,0.3127350618252537,0.32342684858742504,0.5032341050805512,0.36372671905537185,0.33699720312834647,0.5544313588880783,0.4838037872804669,0.09149710466683511,0.08224459198971942,0.020972370565205678,0.1986206865177902,0.1013664560977742,0.11144142371476091,0.05715999084459583,0.07175840670711657,0.14536731987138404,0.23717283901297118,0.24005138718308255,0.6970229484866941,0.7833797073282555,5.191792775487256
@(df.hhsize == 2),util_SHARED2FREE_Two_person_household,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov2toll_available == False,util_SHARED2PAY_Unavailable,1.0,0.0,1.0,1.0,1.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
is_joint & (number_of_participants > 2) # (2),util_SHARED2PAY_Unavailable_based_on_party_size,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']),util_SHARED2PAY_In_vehicle_time,44.68000030517578,47.69000244140625,57.660003662109375,76.1500015258789,49.18000030517578,42.44000244140625,60.90999984741211,61.400001525878906,18.270000457763672,15.789999961853027,4.130000114440918,28.510000228881836,18.810001373291016,19.0,10.100000381469727,12.930000305175781,26.420000076293945,37.52000045776367,39.150001525878906,85.30999755859375,99.69999694824219,135.58999633789062
@2 * walktimeshort_multiplier * df.terminal_time # (4),util_SHARED2PAY_Terminal_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']),util_SHARED2PAY_Operating_cost,7.910493854482669,9.529446175502335,11.572880357001672,15.42283088878534,10.1217464021514,10.302727288470631,15.827567713793247,14.810787509535025,2.428429422964756,2.369199337537499,0.5659754217082056,6.252053973013492,2.935174837698643,2.836458133257132,1.665020670826467,1.7900617879441472,4.277721139430284,7.31161299538219,7.72622233812598,18.8976558725337,21.329375611724164,42.26059189277431
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost / costShareSr2 # (2),util_SHARED2PAY_Parking_cost,0.09249617691608233,0.0,1.342365220350754,0.24267454590024715,3.072107281194277,0.0,1.2099502989511275,0.002459657734285405,0.0,0.0,0.0,0.0,4.23419664276962,1.3410739104730058,0.0,0.0,0.0,0.0,0.0,2.601039210698502,8.808075961010582,0.05515047452599925
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']) / costShareSr2,util_SHARED2PAY_Bridge_toll,0.27572499150815216,0.3208567050877463,0.32342684858742504,0.5032341050805512,0.36372671905537185,0.35293212420017667,0.5703662407426309,0.49973870835229706,0.09149710466683511,0.08224459198971942,0.020972370565205678,0.1986206865177902,0.1013664560977742,0.11144142371476091,0.05715999084459583,0.07175840670711657,0.14536731987138404,0.23717283901297118,0.24005138718308255,0.6970229484866941,0.7833797073282555,5.191792775487256
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']) / costShareSr2,util_SHARED2PAY_Value_toll,0.0,0.14238595380392952,0.0,0.0,0.0,0.5243092739344613,0.5243092739344613,0.5243092739344613,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.hhsize == 2) # (2),util_SHARED2PAY_Two_person_household,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov3_available == False,util_SHARED3FREE_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(odt_skims['HOV3_TIME'] + dot_skims['HOV3_TIME']),util_SHARED3FREE_In_vehicle_time,39.40999984741211,39.98999786376953,53.09000015258789,69.22000122070312,43.599998474121094,41.59000015258789,61.01000213623047,60.56999969482422,18.270000457763672,15.789999961853027,4.130000114440918,28.200000762939453,18.810001373291016,19.0,10.100000381469727,12.930000305175781,26.420000076293945,36.790000915527344,38.40999984741211,79.3699951171875,93.75999450683594,133.35000610351562
@2 * walktimeshort_multiplier * df.terminal_time # (5),util_SHARED3FREE_Terminal_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV3_DIST'] + dot_skims['HOV3_DIST']),util_SHARED3FREE_Operating_cost,8.443563368080973,9.529446175502335,11.572880357001672,15.442573413763085,10.1217464021514,9.828886605052574,15.570904847106473,13.909173707976331,2.428429422964756,2.369199337537499,0.5659754217082056,6.252053973013492,2.935174837698643,2.836458133257132,1.665020670826467,1.7900617879441472,4.277721139430284,7.31161299538219,7.72622233812598,19.92759859694176,22.359318336132223,42.26059189277431
@ivt_cost_multiplier * df.ivot *  df.daily_parking_cost / costShareSr3,util_SHARED3FREE_Parking_cost,0.06474732384125763,0.0,0.9396556542455278,0.16987218213017302,2.150475096835994,0.0,0.8469652092657892,0.0017217604139997838,0.0,0.0,0.0,0.0,2.9639376499387335,0.9387517373311042,0.0,0.0,0.0,0.0,0.0,1.8207274474889512,6.165653172707406,0.038605332168199474
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV3_BTOLL'] + dot_skims['HOV3_BTOLL']) / costShareSr3,util_SHARED3FREE_Bridge_toll,0.21035082129345484,0.22459969356142237,0.2263987940111975,0.35924436463408915,0.2546087033387603,0.24014392034939558,0.39371513584028295,0.33182609134885677,0.06404797326678457,0.05757121439280359,0.014680659395643975,0.13903448056245313,0.07095651926844194,0.07800899660033264,0.040011993591217085,0.0502308846949816,0.10175712390996883,0.16602098730907983,0.1680359710281578,0.5128875869682346,0.5733373181573276,2.347682237982571
@(df.hhsize == 2) # (3),util_SHARED3FREE_Two_person_household,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
hov3toll_available == False,util_SHARED3PAY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['HOV3TOLL_TIME'] + dot_skims['HOV3TOLL_TIME']),util_SHARED3PAY_In_vehicle_time,39.40999984741211,39.98999786376953,53.09000015258789,69.22000122070312,43.599998474121094,41.59000015258789,61.01000213623047,60.56999969482422,18.270000457763672,15.789999961853027,4.130000114440918,28.200000762939453,18.810001373291016,19.0,10.100000381469727,12.930000305175781,26.420000076293945,36.790000915527344,38.40999984741211,79.3699951171875,93.75999450683594,133.35000610351562
@2 * walktimeshort_multiplier * df.terminal_time # (6),util_SHARED3PAY_Terminal_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV3TOLL_DIST'] + dot_skims['HOV3TOLL_DIST']),util_SHARED3PAY_Operating_cost,8.443563368080973,9.529446175502335,11.572880357001672,15.442573413763085,10.1217464021514,9.828886605052574,15.570904847106473,13.909173707976331,2.428429422964756,2.369199337537499,0.5659754217082056,6.252053973013492,2.935174837698643,2.836458133257132,1.665020670826467,1.7900617879441472,4.277721139430284,7.31161299538219,7.72622233812598,19.92759859694176,22.359318336132223,42.26059189277431
@ivt_cost_multiplier * df.ivot * df.daily_parking_cost / costShareSr3,util_SHARED3PAY_Parking_cost,0.06474732384125763,0.0,0.9396556542455278,0.16987218213017302,2.150475096835994,0.0,0.8469652092657892,0.0017217604139997838,0.0,0.0,0.0,0.0,2.9639376499387335,0.9387517373311042,0.0,0.0,0.0,0.0,0.0,1.8207274474889512,6.165653172707406,0.038605332168199474
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV3TOLL_BTOLL'] + dot_skims['HOV3TOLL_BTOLL']) / costShareSr3,util_SHARED3PAY_Bridge_toll,0.21035082129345484,0.22459969356142237,0.2263987940111975,0.35924436463408915,0.2546087033387603,0.24014392034939558,0.39371513584028295,0.33182609134885677,0.06404797326678457,0.05757121439280359,0.014680659395643975,0.13903448056245313,0.07095651926844194,0.07800899660033264,0.040011993591217085,0.0502308846949816,0.10175712390996883,0.16602098730907983,0.1680359710281578,0.5128875869682346,0.5733373181573276,2.347682237982571
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV3TOLL_VTOLL'] + dot_skims['HOV3TOLL_VTOLL']) / costShareSr3,util_SHARED3PAY_Value_toll,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.hhsize == 2) # (4),util_SHARED3PAY_Two_person_household,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@walktimeshort_multiplier * (od_skims['DISTWALK'].clip(upper=walkThresh) + od_skims.reverse('DISTWALK').clip(upper=walkThresh))*60/walkSpeed,util_WALK_Time_up_to_2_miles,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,68.80000305175781,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0,120.0
@walktimelong_multiplier * ((od_skims['DISTWALK'] - walkThresh).clip(lower=0) + (od_skims.reverse('DISTWALK') - walkThresh).clip(lower=0))*60/walkSpeed,util_WALK_Time_beyond_2_of_a_miles,4528.0,5064.0,6044.0,8383.9990234375,5552.0,5168.0,8744.0,7610.00048828125,876.0000610351562,840.0,0.0,2584.0,1184.0,1123.9998779296875,411.9999694824219,452.0000305175781,2000.0,3424.000244140625,3675.999755859375,10504.0,12286.0,46841.99609375
@density_index_multiplier * df.density_index,util_WALK_Destination_zone_densityIndex,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002
@coef_topology_walk_multiplier * df.dest_topology,util_WALK_Topology,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0
is_atwork_subtour & ~work_tour_is_bike,util_BIKE_Unavailable_if_didn't_bike_to_work,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@biketimeshort_multiplier * (od_skims['DISTBIKE'].clip(upper=bikeThresh) + od_skims.reverse('DISTBIKE').clip(upper=bikeThresh))*60/bikeSpeed,util_BIKE_Time_up_to_6_miles,240.0,240.0,240.0,240.0,240.0,240.0,240.0,240.0,147.60000610351562,144.0,34.400001525878906,240.0,178.40000915527344,172.40000915527344,101.20000457763672,105.20000457763672,240.0,240.0,240.0,240.0,240.0,240.0
@biketimelong_multiplier * ((od_skims['DISTBIKE']-bikeThresh).clip(lower=0) + (od_skims.reverse('DISTBIKE')-bikeThresh).clip(lower=0))*60/bikeSpeed,util_BIKE_Time_beyond_6_of_a_miles,1363.9998779296875,1632.0,2122.000244140625,3291.999755859375,1876.0,1684.0,3472.0,2905.0,0.0,0.0,0.0,392.0,0.0,0.0,0.0,0.0,100.0,812.0001831054688,937.9998168945312,4352.0,5243.0,22520.998046875
@density_index_multiplier * df.density_index # (2),util_BIKE_Destination_zone_densityIndex,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002,-0.12592508647185002
@coef_topology_bike_multiplier * df.dest_topology,util_BIKE_Topology,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0,20.0
walk_local_available == False,util_WALK_LOC_Unavailable,1.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0
@(odt_skims['WLK_LOC_WLK_TOTIVT']/100 + dot_skims['WLK_LOC_WLK_TOTIVT']/100),util_WALK_LOC_In_vehicle_time,0.0,0.0,196.5447998046875,103.96040344238281,137.3048095703125,114.28779602050781,193.0894012451172,165.2541961669922,0.0,33.347999572753906,0.0,75.39120483398438,26.215200424194336,20.327598571777344,6.672199726104736,8.675999641418457,38.837398529052734,73.34230041503906,66.80979919433594,0.0,0.0,0.0
@short_i_wait_multiplier * ((odt_skims['WLK_LOC_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LOC_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_LOC_Short_iwait_time,0.0,0.0,40.0,20.0,27.062000274658203,24.68199920654297,40.0,40.0,0.0,40.0,0.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,0.0,0.0,0.0
@long_i_wait_multiplier * ((odt_skims['WLK_LOC_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LOC_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_LOC_Long_iwait_time,0.0,0.0,10.402000427246094,5.268000602722168,5.201000213623047,5.201000213623047,5.267999649047852,10.402000427246094,0.0,10.250801086425781,0.0,10.501798629760742,10.250801086425781,10.250801086425781,10.250801086425781,10.250801086425781,10.250801086425781,10.282400131225586,5.501798629760742,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['WLK_LOC_WLK_XWAIT']/100 + dot_skims['WLK_LOC_WLK_XWAIT']/100),util_WALK_LOC_transfer_wait_time,0.0,0.0,94.1199951171875,36.939998626708984,70.77999877929688,69.27999877929688,44.119998931884766,94.1199951171875,0.0,0.0,0.0,60.0,0.0,0.0,0.0,0.0,0.0,60.0,45.0,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_LOC_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LOC_WLK_BOARDS']-1).clip(0)),util_WALK_LOC_number_of_transfers,0.0,0.0,40.0,30.0,40.0,40.0,20.0,40.0,0.0,0.0,0.0,20.0,0.0,0.0,0.0,0.0,0.0,20.0,20.0,0.0,0.0,0.0
@2 * wacc_multiplier * df.origin_walk_time,util_WALK_LOC_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@2 * wegr_multiplier * df.destination_walk_time,util_WALK_LOC_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_LOC_WLK_WAUX']/100 + dot_skims['WLK_LOC_WLK_WAUX']/100),util_WALK_LOC_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_LOC_WLK_FAR'] + dot_skims['WLK_LOC_WLK_FAR']),util_WALK_LOC_Fare,0.0,0.0,12.143928035982007,7.286356821589205,12.143928035982007,12.143928035982007,7.286356821589205,12.143928035982007,0.0,4.857571214392803,0.0,4.857571214392803,4.857571214392803,4.857571214392803,4.857571214392803,4.857571214392803,4.857571214392803,5.469265367316341,4.857571214392803,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index,util_WALK_LOC_Destination_zone_densityIndex,-0.009627010721266663,-0.23101229351830732,-0.3349640837024861,-0.12040366753567051,-0.8173586556766109,-0.43594990886823387,-0.34330172574891243,-0.25287398982233017,-0.006111676246397894,-0.2543248165459104,-0.12592508647185002,-0.18162484632489115,-0.9207625747785033,-0.47588034754980124,-0.13058541322705108,-0.017950601051182107,-0.30013947552088616,-0.049262781738546195,-0.2942183274795288,-0.3911700298389989,-1.0767664739276677,-0.08271862859859237
@coef_topology_trn_multiplier * df.dest_topology,util_WALK_LOC_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
@(df.age <= 10),util_WALK_LOC_Person_is_less_than_10_years_old,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
walk_lrf_available == False,util_WALK_LRF_Unavailable,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['WLK_LRF_WLK_TOTIVT']/100 + dot_skims['WLK_LRF_WLK_TOTIVT']/100),util_WALK_LRF_In_vehicle_time,100.69580078125,105.60400390625,67.99479675292969,0.0,139.74839782714844,100.4209976196289,173.97381591796875,167.69801330566406,0.0,33.347999572753906,0.0,60.896297454833984,26.215200424194336,20.327598571777344,6.672199726104736,8.675999641418457,38.837398529052734,73.3322982788086,66.80979919433594,0.0,0.0,0.0
@(ivt_lrt_multiplier-1)*(odt_skims['WLK_LRF_WLK_KEYIVT']/100 + dot_skims['WLK_LRF_WLK_KEYIVT']/100),util_WALK_LRF_In_vehicle_time_on_Light_Rail,-1.5008801221847534,-3.5932202339172363,-0.880050003528595,-0.0,-5.439680099487305,-2.0579800605773926,-10.303200721740723,-5.439680099487305,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@(ivt_ferry_multiplier-ivt_lrt_multiplier)*(odt_skims['WLK_LRF_WLK_FERRYIVT']/100 + dot_skims['WLK_LRF_WLK_FERRYIVT']/100),util_WALK_LRF_In_vehicle_time_on_Ferry,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@short_i_wait_multiplier * ((odt_skims['WLK_LRF_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LRF_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_LRF_Short_iwait_time,40.0,40.0,20.0,0.0,26.98080062866211,26.98080062866211,34.16080093383789,40.0,0.0,40.0,0.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,0.0,0.0,0.0
@long_i_wait_multiplier * ((odt_skims['WLK_LRF_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LRF_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_LRF_Long_iwait_time,25.32080078125,9.067800521850586,5.160400390625,0.0,5.160400390625,5.160400390625,5.160400390625,10.32080078125,0.0,10.250801086425781,0.0,8.361799240112305,10.250801086425781,10.250801086425781,10.250801086425781,10.250801086425781,10.250801086425781,10.282400131225586,5.501798629760742,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['WLK_LRF_WLK_XWAIT']/100 + dot_skims['WLK_LRF_WLK_XWAIT']/100),util_WALK_LRF_transfer_wait_time,95.0,122.4800033569336,50.0,0.0,66.66000366210938,66.66000366210938,70.0,90.0,0.0,0.0,0.0,50.0,0.0,0.0,0.0,0.0,0.0,60.0,45.0,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_LRF_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LRF_WLK_BOARDS']-1).clip(0)),util_WALK_LRF_number_of_transfers,40.0,60.0,20.0,0.0,40.0,40.0,40.0,40.0,0.0,0.0,0.0,20.0,0.0,0.0,0.0,0.0,0.0,20.0,20.0,0.0,0.0,0.0
@2 * wacc_multiplier * df.origin_walk_time # (2),util_WALK_LRF_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@2 * wegr_multiplier * df.destination_walk_time # (2),util_WALK_LRF_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_LRF_WLK_WAUX']/100 + dot_skims['WLK_LRF_WLK_WAUX']/100),util_WALK_LRF_Walk_other_time,8.0,8.0,4.0,0.0,8.0,8.0,8.0,8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_LRF_WLK_FAR'] + dot_skims['WLK_LRF_WLK_FAR']),util_WALK_LRF_Fare,12.143928035982007,12.143928035982007,4.857571214392803,0.0,12.143928035982007,12.143928035982007,12.143928035982007,12.143928035982007,0.0,4.857571214392803,0.0,4.857571214392803,4.857571214392803,4.857571214392803,4.857571214392803,4.857571214392803,4.857571214392803,5.469265367316341,4.857571214392803,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (2),util_WALK_LRF_Destination_zone_densityIndex,-0.009627010721266663,-0.23101229351830732,-0.3349640837024861,-0.12040366753567051,-0.8173586556766109,-0.43594990886823387,-0.34330172574891243,-0.25287398982233017,-0.006111676246397894,-0.2543248165459104,-0.12592508647185002,-0.18162484632489115,-0.9207625747785033,-0.47588034754980124,-0.13058541322705108,-0.017950601051182107,-0.30013947552088616,-0.049262781738546195,-0.2942183274795288,-0.3911700298389989,-1.0767664739276677,-0.08271862859859237
@coef_topology_trn_multiplier * df.dest_topology # (2),util_WALK_LRF_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
@(df.age <= 10) # (2),util_WALK_LRF_Person_is_less_than_10_years_old,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
walk_express_available == False,util_WALK_EXP_Unavailable,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['WLK_EXP_WLK_TOTIVT']/100 + dot_skims['WLK_EXP_WLK_TOTIVT']/100),util_WALK_EXP_In_vehicle_time,82.42660522460938,20.014999389648438,128.34640502929688,0.0,108.91130065917969,103.0947036743164,161.71090698242188,132.3594970703125,0.0,33.347999572753906,0.0,60.896297454833984,26.215200424194336,20.327598571777344,6.672199726104736,8.675999641418457,38.837398529052734,73.3322982788086,66.80979919433594,0.0,0.0,0.0
@(ivt_exp_multiplier - 1)*(odt_skims['WLK_EXP_WLK_KEYIVT']/100 + dot_skims['WLK_EXP_WLK_KEYIVT']/100),util_WALK_EXP_In_vehicle_time_on_Express_bus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@short_i_wait_multiplier * ((odt_skims['WLK_EXP_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_EXP_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_EXP_Short_iwait_time,40.0,20.0,40.0,0.0,26.945199966430664,24.565200805664062,30.285200119018555,40.0,0.0,40.0,0.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,0.0,0.0,0.0
@long_i_wait_multiplier * ((odt_skims['WLK_EXP_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_EXP_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_EXP_Long_iwait_time,50.1775016784668,10.017099380493164,15.186200141906738,0.0,5.142600059509277,5.142600059509277,5.142600059509277,10.285200119018555,0.0,10.250801086425781,0.0,8.361799240112305,10.250801086425781,10.250801086425781,10.250801086425781,10.250801086425781,10.250801086425781,10.282400131225586,5.501798629760742,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['WLK_EXP_WLK_XWAIT']/100 + dot_skims['WLK_EXP_WLK_XWAIT']/100),util_WALK_EXP_transfer_wait_time,80.0,20.0,87.63999938964844,0.0,66.66000366210938,63.94000244140625,67.27999877929688,90.0,0.0,0.0,0.0,50.0,0.0,0.0,0.0,0.0,0.0,60.0,45.0,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_EXP_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_EXP_WLK_BOARDS']-1).clip(0)),util_WALK_EXP_number_of_transfers,30.0,10.0,40.0,0.0,40.0,40.0,40.0,40.0,0.0,0.0,0.0,20.0,0.0,0.0,0.0,0.0,0.0,20.0,20.0,0.0,0.0,0.0
@2 * wacc_multiplier * df.origin_walk_time # (3),util_WALK_EXP_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@2 * wegr_multiplier * df.destination_walk_time # (3),util_WALK_EXP_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_EXP_WLK_WAUX']/100 + dot_skims['WLK_EXP_WLK_WAUX']/100),util_WALK_EXP_Walk_other_time,4.0,24.399999618530273,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_EXP_WLK_FAR'] + dot_skims['WLK_EXP_WLK_FAR']),util_WALK_EXP_Fare,14.59070464767616,7.304347826086956,19.466266866566716,0.0,17.01949025487256,17.01949025487256,17.01949025487256,17.01949025487256,0.0,4.857571214392803,0.0,4.857571214392803,4.857571214392803,4.857571214392803,4.857571214392803,4.857571214392803,4.857571214392803,5.469265367316341,4.857571214392803,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (3),util_WALK_EXP_Destination_zone_densityIndex,-0.009627010721266663,-0.23101229351830732,-0.3349640837024861,-0.12040366753567051,-0.8173586556766109,-0.43594990886823387,-0.34330172574891243,-0.25287398982233017,-0.006111676246397894,-0.2543248165459104,-0.12592508647185002,-0.18162484632489115,-0.9207625747785033,-0.47588034754980124,-0.13058541322705108,-0.017950601051182107,-0.30013947552088616,-0.049262781738546195,-0.2942183274795288,-0.3911700298389989,-1.0767664739276677,-0.08271862859859237
@coef_topology_trn_multiplier * df.dest_topology # (3),util_WALK_EXP_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
@(df.age <= 10) # (3),util_WALK_EXP_Person_is_less_than_10_years_old,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
walk_heavyrail_available == False,util_WALK_HVY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,0.0,1.0
@(odt_skims['WLK_HVY_WLK_TOTIVT']/100 + dot_skims['WLK_HVY_WLK_TOTIVT']/100),util_WALK_HVY_In_vehicle_time,100.69580078125,20.014999389648438,120.74909210205078,0.0,93.55239868164062,88.39729309082031,147.0135040283203,117.66200256347656,0.0,33.347999572753906,0.0,60.896297454833984,26.215200424194336,20.327598571777344,6.672199726104736,8.675999641418457,38.837398529052734,73.3322982788086,66.80979919433594,111.15499877929688,141.15200805664062,0.0
@(ivt_hvy_multiplier-1) * (odt_skims['WLK_HVY_WLK_KEYIVT']/100 + dot_skims['WLK_HVY_WLK_KEYIVT']/100),util_WALK_HVY_In_vehicle_time_on_heavy_rail,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-13.267480850219727,-21.38319969177246,-0.0
@short_i_wait_multiplier * ((odt_skims['WLK_HVY_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_HVY_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_HVY_Short_iwait_time,40.0,20.0,40.0,0.0,26.945199966430664,24.565200805664062,30.285200119018555,40.0,0.0,40.0,0.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,25.024799346923828,0.0
@long_i_wait_multiplier * ((odt_skims['WLK_HVY_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_HVY_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_HVY_Long_iwait_time,25.32080078125,10.017099380493164,15.186200141906738,0.0,5.142600059509277,5.142600059509277,5.142600059509277,10.285200119018555,0.0,10.250801086425781,0.0,8.361799240112305,10.250801086425781,10.250801086425781,10.250801086425781,10.250801086425781,10.250801086425781,10.282400131225586,5.501798629760742,6.024799346923828,5.512399673461914,0.0
@xwait_multiplier * (odt_skims['WLK_HVY_WLK_XWAIT']/100 + dot_skims['WLK_HVY_WLK_XWAIT']/100),util_WALK_HVY_transfer_wait_time,95.0,20.0,87.63999938964844,0.0,66.66000366210938,63.94000244140625,67.27999877929688,90.0,0.0,0.0,0.0,50.0,0.0,0.0,0.0,0.0,0.0,60.0,45.0,60.0,63.34000015258789,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_HVY_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_HVY_WLK_BOARDS']-1).clip(0)),util_WALK_HVY_number_of_transfers,40.0,10.0,40.0,0.0,40.0,40.0,40.0,40.0,0.0,0.0,0.0,20.0,0.0,0.0,0.0,0.0,0.0,20.0,20.0,40.0,40.0,0.0
@2 * wacc_multiplier * df.origin_walk_time # (4),util_WALK_HVY_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@wegr_multiplier * 2 *df.destination_walk_time,util_WALK_HVY_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_HVY_WLK_WAUX']/100 + dot_skims['WLK_HVY_WLK_WAUX']/100),util_WALK_HVY_Walk_other_time,8.0,24.399999618530273,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,8.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_HVY_WLK_FAR'] + dot_skims['WLK_HVY_WLK_FAR']),util_WALK_HVY_Fare,12.143928035982007,7.304347826086956,19.466266866566716,0.0,17.01949025487256,17.01949025487256,17.01949025487256,17.01949025487256,0.0,4.857571214392803,0.0,4.857571214392803,4.857571214392803,4.857571214392803,4.857571214392803,4.857571214392803,4.857571214392803,5.469265367316341,4.857571214392803,15.040479760119938,16.443778110944525,0.0
@density_index_multiplier * df.dest_density_index # (4),util_WALK_HVY_Destination_zone_densityIndex,-0.009627010721266663,-0.23101229351830732,-0.3349640837024861,-0.12040366753567051,-0.8173586556766109,-0.43594990886823387,-0.34330172574891243,-0.25287398982233017,-0.006111676246397894,-0.2543248165459104,-0.12592508647185002,-0.18162484632489115,-0.9207625747785033,-0.47588034754980124,-0.13058541322705108,-0.017950601051182107,-0.30013947552088616,-0.049262781738546195,-0.2942183274795288,-0.3911700298389989,-1.0767664739276677,-0.08271862859859237
@coef_topology_trn_multiplier * df.dest_topology # (4),util_WALK_HVY_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
@(df.age <= 10) # (4),util_WALK_HVY_Person_is_less_than_10_years_old,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
walk_commuter_available == False,util_WALK_COM_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['WLK_COM_WLK_TOTIVT']/100 + dot_skims['WLK_COM_WLK_TOTIVT']/100),util_WALK_COM_In_vehicle_time,100.69580078125,20.014999389648438,120.74909210205078,0.0,93.55239868164062,88.39729309082031,147.0135040283203,117.66200256347656,0.0,33.347999572753906,0.0,60.896297454833984,26.215200424194336,20.327598571777344,6.672199726104736,8.675999641418457,38.837398529052734,73.3322982788086,66.80979919433594,111.15499877929688,141.15200805664062,0.0
@(ivt_com_multiplier - 1) * (odt_skims['WLK_COM_WLK_KEYIVT']/100 + dot_skims['WLK_COM_WLK_KEYIVT']/100),util_WALK_COM_In_vehicle_time_on_commuter_rail,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@short_i_wait_multiplier * ((odt_skims['WLK_COM_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_COM_WLK_IWAIT']/100).clip(upper=waitThresh)),util_WALK_COM_Short_iwait_time,40.0,20.0,40.0,0.0,26.945199966430664,24.565200805664062,30.285200119018555,40.0,0.0,40.0,0.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,25.024799346923828,0.0
@long_i_wait_multiplier * ((odt_skims['WLK_COM_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_COM_WLK_IWAIT']/100-waitThresh).clip(0)),util_WALK_COM_Long_iwait_time,25.32080078125,10.017099380493164,15.186200141906738,0.0,5.142600059509277,5.142600059509277,5.142600059509277,10.285200119018555,0.0,10.250801086425781,0.0,8.361799240112305,10.250801086425781,10.250801086425781,10.250801086425781,10.250801086425781,10.250801086425781,10.282400131225586,5.501798629760742,6.024799346923828,5.512399673461914,0.0
@xwait_multiplier * (odt_skims['WLK_COM_WLK_XWAIT']/100 + dot_skims['WLK_COM_WLK_XWAIT']/100),util_WALK_COM_transfer_wait_time,95.0,20.0,87.63999938964844,0.0,66.66000366210938,63.94000244140625,67.27999877929688,90.0,0.0,0.0,0.0,50.0,0.0,0.0,0.0,0.0,0.0,60.0,45.0,60.0,63.34000015258789,0.0
@xfers_wlk_multiplier * ((odt_skims['WLK_COM_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_COM_WLK_BOARDS']-1).clip(0)),util_WALK_COM_number_of_transfers,40.0,10.0,40.0,0.0,40.0,40.0,40.0,40.0,0.0,0.0,0.0,20.0,0.0,0.0,0.0,0.0,0.0,20.0,20.0,40.0,40.0,0.0
@2 * wacc_multiplier * df.origin_walk_time # (5),util_WALK_COM_Walk_access_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@2 * wegr_multiplier * df.destination_walk_time # (4),util_WALK_COM_Walk_egress_time,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64,26.64
@waux_multiplier * (odt_skims['WLK_COM_WLK_WAUX']/100 + dot_skims['WLK_COM_WLK_WAUX']/100),util_WALK_COM_Walk_other_time,8.0,24.399999618530273,4.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,8.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_COM_WLK_FAR'] + dot_skims['WLK_COM_WLK_FAR']),util_WALK_COM_Fare,12.143928035982007,7.304347826086956,19.466266866566716,0.0,17.01949025487256,17.01949025487256,17.01949025487256,17.01949025487256,0.0,4.857571214392803,0.0,4.857571214392803,4.857571214392803,4.857571214392803,4.857571214392803,4.857571214392803,4.857571214392803,5.469265367316341,4.857571214392803,15.040479760119938,16.443778110944525,0.0
@density_index_multiplier * df.dest_density_index # (5),util_WALK_COM_Destination_zone_densityIndex,-0.009627010721266663,-0.23101229351830732,-0.3349640837024861,-0.12040366753567051,-0.8173586556766109,-0.43594990886823387,-0.34330172574891243,-0.25287398982233017,-0.006111676246397894,-0.2543248165459104,-0.12592508647185002,-0.18162484632489115,-0.9207625747785033,-0.47588034754980124,-0.13058541322705108,-0.017950601051182107,-0.30013947552088616,-0.049262781738546195,-0.2942183274795288,-0.3911700298389989,-1.0767664739276677,-0.08271862859859237
@coef_topology_trn_multiplier * df.dest_topology # (5),util_WALK_COM_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
@(df.age < 10),util_WALK_COM_Person_is_less_than_10_years_old,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
drive_local_available == False,util_DRIVE_LOC_Unavailable,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0
auto_ownership == 0 # (3),util_DRIVE_LOC_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (3),util_DRIVE_LOC_Unavailable_for_persons_less_than_16,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['DRV_LOC_WLK_TOTIVT']/100 + dot_skims['WLK_LOC_DRV_TOTIVT']/100),util_DRIVE_LOC_In_vehicle_time,0.0,179.64401245117188,140.85299682617188,151.2552032470703,81.61299896240234,76.45779418945312,137.39759826660156,109.5624008178711,0.0,23.79840087890625,0.0,52.22359848022461,27.104000091552734,20.327598571777344,6.672199726104736,8.675999641418457,38.837398529052734,73.34230041503906,66.80979919433594,0.0,0.0,0.0
@short_i_wait_multiplier * ((odt_skims['DRV_LOC_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LOC_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_LOC_Short_iwait_time,0.0,35.05139923095703,35.034202575683594,35.05139923095703,21.72840118408203,19.348400115966797,35.0172004699707,35.034202575683594,0.0,40.0,0.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,40.0,0.0,0.0,0.0
@long_i_wait_multiplier * ((odt_skims['DRV_LOC_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LOC_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_LOC_Long_iwait_time,0.0,3.665699005126953,5.017099380493164,5.025699615478516,0.0,0.0,0.008600234985351562,5.017099380493164,0.0,10.250801086425781,0.0,8.361799240112305,10.250801086425781,10.250801086425781,10.250801086425781,10.250801086425781,10.250801086425781,10.282400131225586,5.501798629760742,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['DRV_LOC_WLK_XWAIT']/100 + dot_skims['WLK_LOC_DRV_XWAIT']/100),util_DRIVE_LOC_transfer_wait_time,0.0,53.31999969482422,50.0,49.47999954223633,26.65999984741211,23.940000534057617,0.0,50.0,0.0,0.0,0.0,55.720001220703125,0.0,0.0,0.0,0.0,0.0,60.0,45.0,0.0,0.0,0.0
@xfers_wlk_multiplier * ((odt_skims['DRV_LOC_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LOC_DRV_BOARDS']-1).clip(0)),util_DRIVE_LOC_number_of_transfers,0.0,40.0,20.0,40.0,20.0,20.0,0.0,20.0,0.0,0.0,0.0,20.0,0.0,0.0,0.0,0.0,0.0,20.0,20.0,0.0,0.0,0.0
@dtim_multiplier * (odt_skims['DRV_LOC_WLK_DTIM']/100 + dot_skims['WLK_LOC_DRV_DTIM']/100),util_DRIVE_LOC_Drive_time,0.0,52.58000183105469,52.58000183105469,52.58000183105469,52.58000183105469,52.58000183105469,52.58000183105469,52.58000183105469,0.0,8.15999984741211,0.0,5.760000228881836,5.760000228881836,2.759999990463257,2.759999990463257,2.759999990463257,5.760000228881836,5.760000228881836,5.760000228881836,0.0,0.0,0.0
@wacc_multiplier * df.destination_walk_time,util_DRIVE_LOC_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time,util_DRIVE_LOC_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_LOC_WLK_WAUX']/100 + dot_skims['WLK_LOC_DRV_WAUX']/100),util_DRIVE_LOC_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_LOC_WLK_FAR'] + dot_skims['WLK_LOC_DRV_FAR']) + ((odt_skims['DRV_LOC_WLK_DDIST']/100+dot_skims['WLK_LOC_DRV_DDIST']/100) * costPerMile)),util_DRIVE_LOC_Fare_and_operating_cost,0.0,20.62075261197526,15.763181397582457,20.62075261197526,15.763181397582457,15.763181397582457,10.905610183189655,15.763181397582457,0.0,5.305086470436656,0.0,5.173464659271926,5.173464659271926,5.0089365717531855,5.0089365717531855,5.0089365717531855,5.173464659271926,5.785158812195465,5.173464659271926,0.0,0.0,0.0
@dacc_ratio * ((odt_skims['DRV_LOC_WLK_DDIST']/100+ dot_skims['WLK_LOC_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_LOC_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (6),util_DRIVE_LOC_Destination_zone_densityIndex,-0.009627010721266663,-0.23101229351830732,-0.3349640837024861,-0.12040366753567051,-0.8173586556766109,-0.43594990886823387,-0.34330172574891243,-0.25287398982233017,-0.006111676246397894,-0.2543248165459104,-0.12592508647185002,-0.18162484632489115,-0.9207625747785033,-0.47588034754980124,-0.13058541322705108,-0.017950601051182107,-0.30013947552088616,-0.049262781738546195,-0.2942183274795288,-0.3911700298389989,-1.0767664739276677,-0.08271862859859237
@coef_topology_trn_multiplier * df.dest_topology # (6),util_DRIVE_LOC_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
@(df.age < 10) # (2),util_DRIVE_LOC_Person_is_less_than_10_years_old,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
drive_lrf_available == False,util_DRIVE_LRF_Unavailable,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
auto_ownership == 0 # (4),util_DRIVE_LRF_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (4),util_DRIVE_LRF_Unavailable_for_persons_less_than_16,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['DRV_LRF_WLK_TOTIVT']/100 + dot_skims['WLK_LRF_DRV_TOTIVT']/100),util_DRIVE_LRF_In_vehicle_time,28.82979965209961,33.73780059814453,93.06590270996094,109.70919799804688,67.88240051269531,35.05139923095703,102.10759735107422,95.83179473876953,0.0,33.99879837036133,0.0,71.56449890136719,25.574600219726562,19.687000274658203,6.031400203704834,8.035399436950684,45.76519775390625,95.96179962158203,90.09679412841797,0.0,0.0,0.0
@(ivt_lrt_multiplier-1) * (odt_skims['DRV_LRF_WLK_KEYIVT']/100 + dot_skims['WLK_LRF_DRV_KEYIVT']/100),util_DRIVE_LRF_In_vehicle_time_on_Light_Rail,-1.1760600805282593,-3.268399953842163,-3.50957989692688,-4.521369934082031,-5.1148600578308105,-2.3828001022338867,-9.97838020324707,-5.1148600578308105,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@(ivt_ferry_multiplier-ivt_lrt_multiplier)*(odt_skims['DRV_LRF_WLK_FERRYIVT']/100 + dot_skims['WLK_LRF_DRV_FERRYIVT']/100),util_DRIVE_LRF_In_vehicle_time_on_Ferry,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@short_i_wait_multiplier * ((odt_skims['DRV_LRF_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_LRF_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_LRF_Short_iwait_time,35.06999969482422,35.10499954223633,35.06999969482422,35.06999969482422,21.799999237060547,21.799999237060547,28.979999542236328,35.06999969482422,0.0,40.0,0.0,40.0,40.0,40.0,40.0,40.0,35.501800537109375,40.0,40.0,0.0,0.0,0.0
@long_i_wait_multiplier * ((odt_skims['DRV_LRF_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_LRF_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_LRF_Long_iwait_time,20.03499984741211,3.692500114440918,5.034999847412109,5.079300880432129,0.0,0.0,0.0,5.034999847412109,0.0,10.250801086425781,0.0,10.501798629760742,10.250801086425781,10.250801086425781,10.250801086425781,10.250801086425781,5.250899314880371,10.423601150512695,5.752599716186523,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['DRV_LRF_WLK_XWAIT']/100 + dot_skims['WLK_LRF_DRV_XWAIT']/100),util_DRIVE_LRF_transfer_wait_time,50.0,77.47999572753906,50.0,77.47999572753906,21.65999984741211,21.65999984741211,25.0,45.0,0.0,0.0,0.0,50.0,0.0,0.0,0.0,0.0,45.0,84.0,69.0,0.0,0.0,0.0
@xfers_drv_multiplier * ((odt_skims['DRV_LRF_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LRF_DRV_BOARDS']-1).clip(0)),util_DRIVE_LRF_number_of_transfers,40.0,80.0,40.0,60.0,40.0,40.0,40.0,40.0,0.0,0.0,0.0,40.0,0.0,0.0,0.0,0.0,40.0,80.0,80.0,0.0,0.0,0.0
@dtim_multiplier * (odt_skims['DRV_LRF_WLK_DTIM']/100 + dot_skims['WLK_LRF_DRV_DTIM']/100),util_DRIVE_LRF_Drive_time,53.69999694824219,53.69999694824219,53.69999694824219,53.69999694824219,53.69999694824219,53.69999694824219,53.69999694824219,53.69999694824219,0.0,12.239999771118164,0.0,12.239999771118164,12.239999771118164,12.239999771118164,12.239999771118164,12.239999771118164,12.239999771118164,12.239999771118164,12.239999771118164,0.0,0.0,0.0
@wacc_multiplier * df.destination_walk_time # (2),util_DRIVE_LRF_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time # (2),util_DRIVE_LRF_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_LRF_WLK_WAUX']/100 + dot_skims['WLK_LRF_DRV_WAUX']/100),util_DRIVE_LRF_Walk_other_time,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_LRF_WLK_FAR']+dot_skims['WLK_LRF_DRV_FAR']) + ((odt_skims['DRV_LRF_WLK_DDIST']/100+dot_skims['WLK_LRF_DRV_DDIST']/100) *costPerMile)),util_DRIVE_LRF_Fare_and_operating_cost,13.558154516491753,13.558154516491753,13.558154516491753,12.658604291604197,13.558154516491753,13.558154516491753,13.558154516491753,13.558154516491753,0.0,5.726277913289448,0.0,5.726277913289448,5.726277913289448,5.726277913289448,5.726277913289448,5.726277913289448,5.726277913289448,6.337972066212987,5.726277913289448,0.0,0.0,0.0
@dacc_ratio * ((odt_skims['DRV_LRF_WLK_DDIST']/100+ dot_skims['WLK_LRF_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_LRF_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (7),util_DRIVE_LRF_Destination_zone_densityIndex,-0.009627010721266663,-0.23101229351830732,-0.3349640837024861,-0.12040366753567051,-0.8173586556766109,-0.43594990886823387,-0.34330172574891243,-0.25287398982233017,-0.006111676246397894,-0.2543248165459104,-0.12592508647185002,-0.18162484632489115,-0.9207625747785033,-0.47588034754980124,-0.13058541322705108,-0.017950601051182107,-0.30013947552088616,-0.049262781738546195,-0.2942183274795288,-0.3911700298389989,-1.0767664739276677,-0.08271862859859237
@coef_topology_trn_multiplier * df.dest_topology # (7),util_DRIVE_LRF_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
@(df.age < 10) # (3),util_DRIVE_LRF_Person_is_less_than_10_years_old,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
drive_express_available == False,util_DRIVE_EXP_Unavailable,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,1.0,1.0
auto_ownership == 0 # (5),util_DRIVE_EXP_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (5),util_DRIVE_EXP_Unavailable_for_persons_less_than_16,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['DRV_EXP_WLK_TOTIVT']/100 + dot_skims['WLK_EXP_DRV_TOTIVT']/100),util_DRIVE_EXP_In_vehicle_time,56.34700012207031,25.383399963378906,140.85299682617188,0.0,81.61299896240234,76.45779418945312,137.39759826660156,109.5624008178711,0.0,33.99879837036133,0.0,69.71490478515625,23.725200653076172,19.687000274658203,5.953800201416016,8.035399436950684,43.91559982299805,94.1123046875,88.24740600585938,0.0,0.0,0.0
@(ivt_exp_multiplier-1) * (odt_skims['DRV_EXP_WLK_KEYIVT']/100 + dot_skims['WLK_EXP_DRV_KEYIVT']/100),util_DRIVE_EXP_In_vehicle_time_on_Express_bus,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@short_i_wait_multiplier * ((odt_skims['DRV_EXP_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_EXP_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_EXP_Short_iwait_time,40.0,20.0,35.034202575683594,0.0,21.72840118408203,19.348400115966797,35.0172004699707,35.034202575683594,0.0,40.0,0.0,40.0,40.0,40.0,40.0,40.0,35.268001556396484,40.0,40.0,0.0,0.0,0.0
@long_i_wait_multiplier * ((odt_skims['DRV_EXP_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_EXP_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_EXP_Long_iwait_time,25.096099853515625,10.017099380493164,5.017099380493164,0.0,0.0,0.0,0.008600234985351562,5.017099380493164,0.0,10.250801086425781,0.0,12.407999992370605,12.15719985961914,10.250801086425781,10.134000778198242,10.250801086425781,7.27400016784668,12.439599990844727,7.541999816894531,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['DRV_EXP_WLK_XWAIT']/100 + dot_skims['WLK_EXP_DRV_XWAIT']/100),util_DRIVE_EXP_transfer_wait_time,77.0,20.0,50.0,0.0,26.65999984741211,23.940000534057617,0.0,50.0,0.0,0.0,0.0,50.0,0.0,0.0,0.0,0.0,45.0,84.0,69.0,0.0,0.0,0.0
@xfers_drv_multiplier * ((odt_skims['DRV_EXP_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_EXP_DRV_BOARDS']-1).clip(0)),util_DRIVE_EXP_number_of_transfers,80.0,20.0,40.0,0.0,40.0,40.0,0.0,40.0,0.0,0.0,0.0,40.0,0.0,0.0,0.0,0.0,40.0,80.0,80.0,0.0,0.0,0.0
@dtim_multiplier * (odt_skims['DRV_EXP_WLK_DTIM']/100 + dot_skims['WLK_EXP_DRV_DTIM']/100),util_DRIVE_EXP_Drive_time,31.060001373291016,6.119999885559082,52.58000183105469,0.0,52.58000183105469,52.58000183105469,52.58000183105469,52.58000183105469,0.0,12.239999771118164,0.0,12.239999771118164,12.239999771118164,12.239999771118164,12.239999771118164,12.239999771118164,12.239999771118164,12.239999771118164,12.239999771118164,0.0,0.0,0.0
@wacc_multiplier * df.destination_walk_time # (3),util_DRIVE_EXP_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time # (3),util_DRIVE_EXP_Walk_egress_ime,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_EXP_WLK_WAUX']/100 + dot_skims['WLK_EXP_DRV_WAUX']/100),util_DRIVE_EXP_Walk_other_time,8.0,24.399999618530273,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_EXP_WLK_FAR']+dot_skims['WLK_EXP_DRV_FAR']) + ((odt_skims['DRV_EXP_WLK_DDIST']/100+dot_skims['WLK_EXP_DRV_DDIST']/100) *costPerMile)),util_DRIVE_EXP_Fare_and_operating_cost,20.326496907796102,7.738700901014336,15.763181397582457,0.0,15.763181397582457,15.763181397582457,10.905610183189655,15.763181397582457,0.0,5.726277913289448,0.0,13.030625190334518,10.61983058763587,5.726277913289448,8.173054524983602,5.726277913289448,13.030625190334518,13.642319343258057,13.030625190334518,0.0,0.0,0.0
@dacc_ratio * ((odt_skims['DRV_EXP_WLK_DDIST']/100+ dot_skims['WLK_EXP_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_EXP_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (8),util_DRIVE_EXP_Destination_zone_densityIndex,-0.009627010721266663,-0.23101229351830732,-0.3349640837024861,-0.12040366753567051,-0.8173586556766109,-0.43594990886823387,-0.34330172574891243,-0.25287398982233017,-0.006111676246397894,-0.2543248165459104,-0.12592508647185002,-0.18162484632489115,-0.9207625747785033,-0.47588034754980124,-0.13058541322705108,-0.017950601051182107,-0.30013947552088616,-0.049262781738546195,-0.2942183274795288,-0.3911700298389989,-1.0767664739276677,-0.08271862859859237
@coef_topology_trn_multiplier * df.dest_topology # (8),util_DRIVE_EXP_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
@(df.age < 10) # (4),util_DRIVE_EXP_Person_is_less_than_10_years_old,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
drive_heavyrail_available == False,util_DRIVE_HVY_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
auto_ownership == 0 # (6),util_DRIVE_HVY_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (6),util_DRIVE_HVY_Unavailable_for_persons_less_than_16,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['DRV_HVY_WLK_TOTIVT']/100 + dot_skims['WLK_HVY_DRV_TOTIVT']/100),util_DRIVE_HVY_In_vehicle_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(ivt_hvy_multiplier-1) * (odt_skims['DRV_HVY_WLK_KEYIVT']/100 + dot_skims['WLK_HVY_DRV_KEYIVT']/100),util_DRIVE_HVY_In_vehicle_time_on_heavy_rail,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@short_i_wait_multiplier * ((odt_skims['DRV_HVY_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_HVY_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_HVY_Short_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@long_i_wait_multiplier * ((odt_skims['DRV_HVY_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_HVY_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_HVY_Long_iwait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['DRV_HVY_WLK_XWAIT']/100 + dot_skims['WLK_HVY_DRV_XWAIT']/100),util_DRIVE_HVY_transfer_wait_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_drv_multiplier * ((odt_skims['DRV_HVY_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_HVY_DRV_BOARDS']-1).clip(0)),util_DRIVE_HVY_number_of_transfers,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@dtim_multiplier * (odt_skims['DRV_HVY_WLK_DTIM']/100 + dot_skims['WLK_HVY_DRV_DTIM']/100),util_DRIVE_HVY_Drive_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@wacc_multiplier * df.destination_walk_time # (4),util_DRIVE_HVY_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time # (4),util_DRIVE_HVY_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_HVY_WLK_WAUX']/100 + dot_skims['WLK_HVY_DRV_WAUX']/100),util_DRIVE_HVY_Walk_other_time,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_HVY_WLK_FAR']+dot_skims['WLK_HVY_DRV_FAR']) + ((odt_skims['DRV_HVY_WLK_DDIST']/100+dot_skims['WLK_HVY_DRV_DDIST']/100) *costPerMile)),util_DRIVE_HVY_Fare_and_operating_cost,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@dacc_ratio * (odt_skims['DRV_HVY_WLK_DDIST']/100) / od_skims['DIST'],util_DRIVE_HVY_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (9),util_DRIVE_HVY_Destination_zone_densityIndex,-0.009627010721266663,-0.23101229351830732,-0.3349640837024861,-0.12040366753567051,-0.8173586556766109,-0.43594990886823387,-0.34330172574891243,-0.25287398982233017,-0.006111676246397894,-0.2543248165459104,-0.12592508647185002,-0.18162484632489115,-0.9207625747785033,-0.47588034754980124,-0.13058541322705108,-0.017950601051182107,-0.30013947552088616,-0.049262781738546195,-0.2942183274795288,-0.3911700298389989,-1.0767664739276677,-0.08271862859859237
@coef_topology_trn_multiplier * df.dest_topology # (9),util_DRIVE_HVY_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
@(df.age < 10) # (5),util_DRIVE_HVY_Person_is_less_than_10_years_old,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
drive_commuter_available == False,util_DRIVE_COM_Unavailable,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
auto_ownership == 0 # (7),util_DRIVE_COM_Unavailable_for_zero_auto_households,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
age < 16 # (7),util_DRIVE_COM_Unavailable_for_persons_less_than_16,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['DRV_COM_WLK_TOTIVT']/100 + dot_skims['WLK_COM_DRV_TOTIVT']/100),util_DRIVE_COM_In_vehicle_time,0.0,23.246999740600586,39.89080047607422,0.0,32.89799880981445,47.11579895019531,0.0,52.630699157714844,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(ivt_com_multiplier - 1) * (odt_skims['DRV_COM_WLK_KEYIVT']/100 + dot_skims['WLK_COM_DRV_KEYIVT']/100),util_DRIVE_COM_In_vehicle_time_on_commuter_rail,-0.0,-5.402430534362793,-7.503300666809082,-0.0,-7.503300666809082,-11.103930473327637,-0.0,-11.103930473327637,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0
@short_i_wait_multiplier * ((odt_skims['DRV_COM_WLK_IWAIT']/100).clip(upper=waitThresh) + (dot_skims['WLK_COM_DRV_IWAIT']/100).clip(upper=waitThresh)),util_DRIVE_COM_Short_iwait_time,0.0,20.0,20.0,0.0,20.0,20.0,0.0,20.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@long_i_wait_multiplier * ((odt_skims['DRV_COM_WLK_IWAIT']/100-waitThresh).clip(0) + (dot_skims['WLK_COM_DRV_IWAIT']/100-waitThresh).clip(0)),util_DRIVE_COM_Long_iwait_time,0.0,30.01110076904297,30.01110076904297,0.0,30.01110076904297,30.01110076904297,0.0,30.01110076904297,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xwait_multiplier * (odt_skims['DRV_COM_WLK_XWAIT']/100 + dot_skims['WLK_COM_DRV_XWAIT']/100),util_DRIVE_COM_transfer_wait_time,0.0,20.0,30.0,0.0,9.600000381469727,5.860000133514404,0.0,30.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@xfers_drv_multiplier * ((odt_skims['DRV_COM_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_COM_DRV_BOARDS']-1).clip(0)),util_DRIVE_COM_number_of_transfers,0.0,20.0,20.0,0.0,20.0,20.0,0.0,20.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@dtim_multiplier * (odt_skims['DRV_COM_WLK_DTIM']/100 + dot_skims['WLK_COM_DRV_DTIM']/100),util_DRIVE_COM_Drive_time,0.0,21.559999465942383,21.559999465942383,0.0,21.559999465942383,21.559999465942383,0.0,21.559999465942383,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@wacc_multiplier * df.destination_walk_time # (5),util_DRIVE_COM_Walk_access_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@wegr_multiplier * df.destination_walk_time # (5),util_DRIVE_COM_Walk_egress_time,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32,13.32
@waux_multiplier * (odt_skims['DRV_COM_WLK_WAUX']/100 + dot_skims['WLK_COM_DRV_WAUX']/100),util_DRIVE_COM_Walk_other_time,0.0,36.400001525878906,14.800000190734863,0.0,6.0,6.0,0.0,6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_COM_WLK_FAR']+dot_skims['WLK_COM_DRV_FAR']) + ((odt_skims['DRV_COM_WLK_DDIST']/100+dot_skims['WLK_COM_DRV_DDIST']/100) *costPerMile)),util_DRIVE_COM_Fare_and_operating_cost,0.0,11.032394935344827,11.032394935344827,0.0,11.032394935344827,11.032394935344827,0.0,11.032394935344827,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@dacc_ratio * ((odt_skims['DRV_COM_WLK_DDIST']/100 + dot_skims['WLK_COM_DRV_DDIST']/100)/ (od_skims['DIST']*2)),util_DRIVE_COM_Ratio_of_drive_access_distance_to_OD_distance,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@density_index_multiplier * df.dest_density_index # (10),util_DRIVE_COM_Destination_zone_densityIndex,-0.009627010721266663,-0.23101229351830732,-0.3349640837024861,-0.12040366753567051,-0.8173586556766109,-0.43594990886823387,-0.34330172574891243,-0.25287398982233017,-0.006111676246397894,-0.2543248165459104,-0.12592508647185002,-0.18162484632489115,-0.9207625747785033,-0.47588034754980124,-0.13058541322705108,-0.017950601051182107,-0.30013947552088616,-0.049262781738546195,-0.2942183274795288,-0.3911700298389989,-1.0767664739276677,-0.08271862859859237
@coef_topology_trn_multiplier * df.dest_topology # (10),util_DRIVE_COM_Topology,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2,2.2
@(df.age < 10) # (6),util_DRIVE_COM_Person_is_less_than_10_years_old,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) # (2),util_Taxi_In_vehicle_time,44.68000030517578,47.69000244140625,57.660003662109375,76.1500015258789,49.18000030517578,42.44000244140625,60.90999984741211,61.400001525878906,18.270000457763672,15.789999961853027,4.130000114440918,28.510000228881836,18.810001373291016,19.0,10.100000381469727,12.930000305175781,26.420000076293945,37.52000045776367,39.150001525878906,85.30999755859375,99.69999694824219,135.58999633789062
@1.5 * df.totalWaitTaxi,util_Taxi_Wait_time,40.2,28.500000000000007,28.500000000000007,34.2,22.500000000000004,28.500000000000007,28.500000000000007,28.500000000000007,40.2,28.500000000000007,28.500000000000007,28.500000000000007,22.500000000000004,28.500000000000007,28.500000000000007,40.2,28.500000000000007,28.500000000000007,28.500000000000007,28.500000000000007,22.500000000000004,28.500000000000007
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']),util_Taxi_Tolls,0.0,0.24917541915687663,0.0,0.0,0.0,0.9175412293853072,0.9175412293853072,0.9175412293853072,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']),util_Taxi_Bridge_toll,0.48251873513926624,0.5614992339035559,0.5659969850279938,0.8806596838909646,0.6365217583469007,0.6176312173503091,0.9981409212996041,0.8745427396165198,0.16011993316696144,0.14392803598200898,0.036701648489109936,0.34758620140613283,0.17739129817110486,0.1950224915008316,0.1000299839780427,0.125577211737454,0.25439280977492207,0.41505246827269954,0.4200899275703945,1.2197901598517147,1.370914487824447,9.085637357102698
@ivt_cost_multiplier * df.ivot * (Taxi_baseFare * 2 + (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']) * Taxi_costPerMile +(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * Taxi_costPerMinute)*100,util_Taxi_Fare,115.43029144607382,136.33042182522018,163.82067450161637,215.56102289431456,144.04678001575382,145.11005453084002,217.90884953031292,205.21080097158452,41.740926488049915,40.54992424137052,15.776311940160289,91.66597426384463,48.21049291333337,47.00329736254919,30.67106507171219,32.75262355089545,66.46236436835294,106.61110027261759,112.11814136876875,260.9055549129732,294.0737516983695,563.7444583372376
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) # (3),util_TNC_Single_In_vehicle_time,44.68000030517578,47.69000244140625,57.660003662109375,76.1500015258789,49.18000030517578,42.44000244140625,60.90999984741211,61.400001525878906,18.270000457763672,15.789999961853027,4.130000114440918,28.510000228881836,18.810001373291016,19.0,10.100000381469727,12.930000305175781,26.420000076293945,37.52000045776367,39.150001525878906,85.30999755859375,99.69999694824219,135.58999633789062
@1.5 * df.totalWaitSingleTNC,util_TNC_Single_Wait_time,22.2,18.9,18.9,22.049999999999997,13.95,18.9,18.9,18.9,22.2,18.9,18.9,18.9,13.95,18.9,18.9,22.2,18.9,18.9,18.9,18.9,13.95,18.9
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']) # (2),util_TNC_Single_Tolls,0.0,0.24917541915687663,0.0,0.0,0.0,0.9175412293853072,0.9175412293853072,0.9175412293853072,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + odr_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL'] + dor_skims['HOV2TOLL_BTOLL']),util_TNC_Single_Bridge_toll,0.9844677194483812,1.1229984678071119,1.1319939700559876,1.7228184918771081,1.2730435166938014,1.20845573917143,1.9775711814502903,1.7784109044110756,0.3202398663339229,0.28785607196401797,0.07340329697821987,0.6600899303156038,0.3520839525305706,0.3900449830016632,0.2000599679560854,0.251154423474908,0.5100449843742679,0.8313643700000585,0.8414392885954483,2.4917541229385307,2.794003053404938,18.17055437125187
"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_single_baseFare * 2 + (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']) * TNC_single_costPerMile + (odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * TNC_single_costPerMinute, TNC_single_costMinimum) * 100",util_TNC_Single_Cost,84.73116347099887,97.80342525270567,116.96762245098154,152.94711957985848,102.75382709646152,101.15964966735382,149.3098680762158,142.1276864619448,33.46362936085668,31.962099318382798,13.814932724525185,65.68947810640577,37.381712357322314,36.74590812808927,24.384648724831916,26.51586289527355,50.43022464597778,77.2846799561645,81.00342300163395,182.17025825466172,206.06645529774173,373.7693775182721
@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * TNC_shared_IVTFactor,util_TNC_Shared_In_vehicle_time,67.02000427246094,71.53500366210938,86.49000549316406,114.22500610351562,73.77000427246094,63.660003662109375,91.36499786376953,92.10000610351562,27.405000686645508,23.684999465942383,6.195000171661377,42.76499938964844,28.215002059936523,28.5,15.15000057220459,19.395000457763672,39.630001068115234,56.279998779296875,58.72500228881836,127.96499633789062,149.54998779296875,203.38499450683594
@1.5 * df.totalWaitSharedTNC,util_TNC_Shared_Wait_time,34.5,23.999999999999993,23.999999999999993,28.5,19.499999999999993,23.999999999999993,23.999999999999993,23.999999999999993,34.5,23.999999999999993,23.999999999999993,23.999999999999993,19.499999999999993,23.999999999999993,23.999999999999993,34.5,23.999999999999993,23.999999999999993,23.999999999999993,23.999999999999993,19.499999999999993,23.999999999999993
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']) # (3),util_TNC_Shared_Tolls,0.0,0.24917541915687663,0.0,0.0,0.0,0.9175412293853072,0.9175412293853072,0.9175412293853072,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + odr_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL'] + dor_skims['HOV2TOLL_BTOLL']) # (2),util_TNC_Shared_Bridge_toll,0.9844677194483812,1.1229984678071119,1.1319939700559876,1.7228184918771081,1.2730435166938014,1.20845573917143,1.9775711814502903,1.7784109044110756,0.3202398663339229,0.28785607196401797,0.07340329697821987,0.6600899303156038,0.3520839525305706,0.3900449830016632,0.2000599679560854,0.251154423474908,0.5100449843742679,0.8313643700000585,0.8414392885954483,2.4917541229385307,2.794003053404938,18.17055437125187
"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_shared_baseFare * 2 + (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']) * TNC_shared_costPerMile + (odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * TNC_shared_costPerMinute, TNC_shared_costMinimum) * 100",util_TNC_Shared_Cost,38.877120582775014,44.1099838874508,51.8250655556011,66.30782966670961,46.094392836540706,45.40623746354361,64.73882580804325,61.88059610941599,18.239998424249787,17.622189042807694,10.299131001668355,31.16221735323744,19.805577634156553,19.553701237760023,14.557960544569024,15.429446150337917,25.065066038757962,35.85355378341102,37.348244822901044,78.02500117128936,87.66045291563202,154.77102299680237
@(df.is_indiv & (df.auto_ownership == 0)),util_Walk_ASC_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),util_Walk_ASC_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)),util_Walk_ASC_Auto_sufficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership == 0)) # (2),util_Bike_ASC_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (2),util_Bike_ASC_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (2),util_Bike_ASC_Auto_sufficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (3),util_Shared_ride_2_ASC_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (3),util_Shared_ride_2_ASC_Auto_sufficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership == 0)) # (4),util_Shared_ride_3p_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (4),util_Shared_ride_3p_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (4),util_Shared_ride_3p_Auto_sufficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership == 0)) # (5),util_Walk_to_Transit_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (5),util_Walk_to_Transit_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (5),util_Walk_to_Transit_Auto_sufficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (6),util_Drive_to_Transit_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (6),util_Drive_to_Transit_Auto_sufficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership == 0)) # (7),util_Taxi_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (7),util_Taxi_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (7),util_Taxi_Auto_sufficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership == 0)) # (8),util_TNC_Single_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (8),util_TNC_Single_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (8),util_TNC_Single_Auto_sufficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_indiv & (df.auto_ownership == 0)) # (9),util_TNC_Shared_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (9),util_TNC_Shared_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_indiv & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (9),util_TNC_Shared_Auto_sufficient,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.is_joint & (df.auto_ownership == 0)),util_Joint_Walk_ASC_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),util_Joint_Walk_ASC_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)),util_Joint_Walk_ASC_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (2),util_Joint_Bike_ASC_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (2),util_Joint_Bike_ASC_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (2),util_Joint_Bike_ASC_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (4),util_Joint_Shared_ride_3p_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (4),util_Joint_Shared_ride_3p_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (4),util_Joint_Shared_ride_3p_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (5),util_Joint_Walk_to_Transit_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (5),util_Joint_Walk_to_Transit_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (5),util_Joint_Walk_to_Transit_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (6),util_Joint_Drive_to_Transit_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (6),util_Joint_Drive_to_Transit_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (7),util_Joint_Taxi_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (7),util_Joint_Taxi_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (7),util_Joint_Taxi_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (8),util_Joint_TNC_Single_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (8),util_Joint_TNC_Single_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (8),util_Joint_TNC_Single_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership == 0)) # (9),util_Joint_TNC_Shared_Zero_auto,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)) # (9),util_Joint_TNC_Shared_Auto_deficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@(df.is_joint & (df.auto_ownership >= df.num_workers) & (df.auto_ownership > 0)) # (9),util_Joint_TNC_Shared_Auto_sufficient,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1,util_Local_bus_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.walk_ferry_available == False),util_Walk_to_Light_Rail_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@(df.drive_ferry_available == False),util_Drive_to_Light_Rail_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.walk_ferry_available,util_Walk_to_Ferry_ASC,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.drive_ferry_available,util_Drive_to_Ferry_ASC,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
1 # (2),util_Express_Bus_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
1 # (3),util_Heavy_Rail_ASC,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
1 # (4),util_Commuter_Rail,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
@df.destination_in_cbd,util_Walk_to_Transit_dest_CBD,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@df.destination_in_cbd # (2),util_Drive_to_Transit_dest_CBD,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
@drvtrn_distpen_0_multiplier * (1-od_skims['DIST']/drvtrn_distpen_max).clip(lower=0),util_Drive_to_Transit_distance_penalty,63.18000793457031,19.620010375976562,0.0,0.0,0.0,10.4399995803833,0.0,0.0,203.5800018310547,205.1999969482422,254.51998901367188,126.72000122070312,189.71998596191406,192.41998291015625,224.4600067138672,222.66000366210938,153.0,88.91999053955078,77.58000946044922,0.0,0.0,0.0
@od_skims.max('DISTWALK') > 3,util_Walk_not_available_for_long_distances,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0,1.0,0.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0
@od_skims.max('DISTBIKE') > 8,util_Bike_not_available_for_long_distances,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,1.0
is_escort,util_Drive_alone_not_available_for_escort_tours,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0
